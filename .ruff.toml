target-version = "py38"

exclude = [

]

select = [
    # ruff's default set of rules: https://docs.astral.sh/ruff/configuration/#using-pyprojecttoml
    #"E4", "E7", "E9", "F",

    # pyflakes: https://docs.astral.sh/ruff/rules/#pyflakes-f
    "F",

    # pycodestyle: https://docs.astral.sh/ruff/rules/#pycodestyle-e-w
    "E",
    "W",

    # mccabe: https://docs.astral.sh/ruff/rules/#mccabe-c90
    #"C90", # disabled, complexity is ok

    # isort: https://docs.astral.sh/ruff/rules/#isort-i
    "I",

    # pep8-naming: https://docs.astral.sh/ruff/rules/#pep8-naming-n
    "N",

    # pydocstyle: https://docs.astral.sh/ruff/rules/#pydocstyle-d
    #"D", # too pedantic, docs are not generated

    # pyupgrade: https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "UP",

    # flake8-2020: https://docs.astral.sh/ruff/rules/#flake8-2020-ytt
    "YTT",

    # flake8-annotations: https://docs.astral.sh/ruff/rules/#flake8-annotations-ann
    #"ANN", # code is not be type annotated.

    # flake8-async: https://docs.astral.sh/ruff/rules/#flake8-async-async
    #"ASYNC", # code doesn't use Python's async

    # flake8-bandit: https://docs.astral.sh/ruff/rules/#flake8-bandit-s
    # todo
    #"S",

    # flake8-blind-except: https://docs.astral.sh/ruff/rules/#flake8-blind-except-ble
    # todo
    #"BLE",

    # flake8-boolean-trap: https://docs.astral.sh/ruff/rules/#flake8-boolean-trap-fbt
    #"FBT", # these aren't *that* confusing, c'mon.

    # flake-8-bugbear: https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    # todo
    #"B"

    # flake8-builtins: https://docs.astral.sh/ruff/rules/#flake8-builtins-a
    "A",

    # flake8-commas
    #"COM", # inserts trailing commas into function calls? too weird.

    # flake8-copyright
    #"CPY",

    # flake8-comprehensions
    "C4",
    
    # flake8-datetimez
    "DTZ",
    
    # flake8-debugger
    "T10",

    # flake8-django
    # "DJ" # not a django project
    
    # flake8-errmsg
    "EM",

    # ...

    # pylint: https://docs.astral.sh/ruff/rules/#pylint-pl
    "PL",

    # ...

    # ruff: https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
    "RUF",
]

ignore = [
    "RUF005", # "Consider {expression} instead of concatenation". solution is unreadable and optimised for speed.
    "RUF012", # "Mutable class attributes should be annotated with `typing.ClassVar`". # code is not type annotated
    "E501", # "Line too long". long lines are ok, contortions to obey rule are not ok.
    "E731", # "Do not assign a `lambda` expression, use a `def`". lambdas are fine.
    "UP031", # "Use format specifiers instead of percent format". percent formatters are fine. f-strings absorb the environment.
    "PLR0913", # "Too many arguments in function definition". complexity is ok.
    "PLR0915", # "Too many statements". complexity is ok.
    "PLR0912", # "Too many branches". complexity is ok
]
