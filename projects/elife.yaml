defaults:
    description: defaults for all projects in this file
    salt: '2017.7.8' # the version of salt these project use
    # use false with a subdomain to assign internal addresses only
    domain: elifesciences.org
    # addressing within VPC
    intdomain: elife.internal
    # 'lax', 'metrics', 'gateway', etc
    subdomain: null
    # projects with an explicit `repo` attribute support branch deployments with
    # ./bldr deploy
    repo: null
    # repository containing build instructions for this project
    formula-repo: null
    # repo containing project pillar data (credentials typically)
    # only the master-server will have a copy of this and only the master-server
    # will need permissions to clone it
    # TODO: hunt down ssh:// remotes
    private-repo: git@github.com:elifesciences/builder-private
    configuration-repo: git@github.com:elifesciences/builder-configuration
    # default branch to use when creating new instances
    default-branch: master
    # in rare cases we have formulas requiring the states of other formulas
    formula-dependencies:
        - https://github.com/elifesciences/builder-base-formula
    aws:
        account-id: 512686554592
        # TODO: this field will become a dictionary of all EC2-related configuration
        ec2:
            # how many EC2 instance per stack instance
            cluster-size: 1
            # turn on T2 `unlimited` if necessary
            cpu-credits: standard
            # whether the first EC2 node should get an external DNS entry such as env--project--1.elifesciences.org
            # only makes sense if cluster-size > 1
            dns-external-primary: false
            # whether the EC2 nodes should get a per-node internal DNS entry such as env--project--1.elife.internal
            # only makes sense if cluster-size > 1
            dns-internal: false
            # override 'ext' (only supported key)
            # for some EC2 instances
            overrides: {}
            # destroy some EC2 instances in the cluster,
            # for future re-creation
            suppressed: []
            # find more here: http://cloud-images.ubuntu.com/releases/
            # Ubuntu 18.04
            ami: ami-05ef127698ebcd429 # GENERATED created from basebox--1804
                                       # us-east-1, build date 20180814, hvm:ebs-ssd, AMI built on 20180828
            # use a master server or go ronin?
            masterless: false
            # optional: pin a master server for all new instances of a project
            master_ip: 10.0.2.198
            # optional: specify `ports` to be opened
            security-group: {}
        region: us-east-1
        vpc-id: vpc-78a2071d  # vpc-id + subnet-id are peculiar to AWS account + region
        subnet-id: subnet-1d4eb46a # elife-public-subnet, us-east-1d
        subnet-cidr: '10.0.2.0/24'
        availability-zone: us-east-1d
        ## additional value in case of capacity problems: elife-public-subnet-3, us-east-1a
        # subnet-id: subnet-2116727b
        # subnet-cidr: '10.0.10.0/24'
        # necessary for multiple-node EC2 and for ELB
        redundant-subnet-id: subnet-7a31dd46 # elife-public-subnet-2, us-east-1e
        redundant-subnet-cidr: '10.0.3.0/24'
        redundant-availability-zone: us-east-1e
        # TODO: this will be moved inside aws.ec2
        type: t2.small  # ~ $20/mo
        # TODO: this will be moved inside aws.ec2
        # ports: {}
        rds:
            # rds defaults only used if an `rds` section present in project
            # explicit database name overrides the one generated at template creation
            multi-az: false
            engine: postgres # or 'MySQL'
            # ensure this matches the version of Postgres you install on server!
            # version: '9.4' # EOL Feb 2020
            version: '11.1' # EOL Nov 2023
            allow-major-version-upgrade: False # do not alter unless you're doing a major version upgrade
            type: db.t2.small
            storage: 5 # GB
            # Standard for backward compatibility
            storage-type: Standard # standard|gp2|io1 https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html
            backup-retention: 28 # days
            # if rds.params are specified, a custom db parameter group is created
            params: []
            encryption: false
            # two subnets are required in two different availability zones
            # http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbsubnet-group.html
            subnets:
                # two are required
                # NOTE! the 'dbsubnet-' prefix is important to *builder*
                # it tells us which subnets we can provision RDS within
                - subnet-8eea67d7 # elife-dbsubnet-1
                - subnet-dbc471f0 # elife-dbsubnet-2
            # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html
            deletion-policy: Snapshot # 'Delete', 'Retain' 'Snapshot'

        # TODO: this will be moved inside aws.ec2
        ext:
            # external hdd
            type: standard # magnetic, use 'gp2' for ssd
            size: 10 # GB
            device: /dev/sdh
        elb:
            # elb defaults only used if an 'elb' section present in project
            stickiness: false
            protocol: http
            additional_listeners: {}
            idle_timeout: 60
            # maintained through `aws iam upload-server-certificate`
            certificate: arn:aws:iam::512686554592:server-certificate/cloudfront/wildcard.elifesciences.org/2019.wildcard.elifesciences.org
            healthcheck:
                protocol: http
                port: 80
                path: /ping
                timeout: 4 
                interval: 5
                unhealthy_threshold: 2
                healthy_threshold: 2
        sqs: []
        sns: []
        # e.g.
        # s3:
        #    bucket-name-{instance}:
        #       sqs-notifications: # not implemented
        #           queue-name:
        #               prefix: 'elife-'
        #               suffix: '.xml'
        #       deletion-policy: delete|retain
        #       encryption: false
        s3: {}
        eks:
            # eks defaults only used if a 'eks' section present in project
            #https://docs.aws.amazon.com/eks/latest/userguide/platform-versions.html
            version: '1.11'
            # two subnets in two different availability zones, both used in master nodes and in worker nodes
            subnet-id: subnet-0c60bc3cb24a2816b
            redundant-subnet-id: subnet-009a04cbefc8e3661
            worker:
                type: t2.small
                # autoscaling group will never have fewer than these EC2 nodes
                min-size: 1
                # autoscaling group will never have more than these EC2 nodes
                max-size: 3
                # (currently fixed) number of EC2 nodes
                desired-capacity: 1
            helm: false
            external-dns: false
                # Route53 hosted zone to create subdomains on
                #domain-filter: elifesciences.org
        cloudfront: 
            # cloudfront defaults only used if a 'cloudfront' section present in project
            subdomains: []
            subdomains-without-dns: []
            domains: []
            origins: {}
            # maintained through `aws iam upload-server-certificate`
            certificate_id: ASCAJG6DKII7DCOTNDHNC
            cookies: []
            compress: true
            headers: []
            errors: null
            default-ttl: 0 # seconds
            logging: false
        fastly:
            # fastly defaults only used if a 'fastly' section present in project
            subdomains: []
            subdomains-without-dns: []
            default-ttl: 3600 # Fastly default, in seconds
            shield: true
            dns:
                cname: u2.shared.global.fastly.net
                a:
                    - 151.101.2.217
                    - 151.101.66.217
                    - 151.101.130.217
                    - 151.101.194.217
            gcslogging: false
            bigquerylogging: false
            healthcheck: false
            errors: false
            ip-blacklist: false
            vcl-templates: {}
            vcl:
                - "original-host"
            surrogate-keys: {}
        subdomains: []
        elasticache:
            # elasticache defaults only used if an `rds` section present in project
            type: cache.t2.small # 1.55 GB of memory, ~$25/mo
            engine: redis
            az: us-east-1d # alternative: us-east-1e to match EC2 instances
            subnets:
                - subnet-20275c68 # elife-cache-subnet-1
                - subnet-c4033af8 # elife-cache-subnet-2
            version: "2.8.24" # closest to builder-base-formula redis.sls
            configuration:
                maxmemory-policy: volatile-lru
            clusters: 1
        vault:
            address: https://master-server.elifesciences.org:8200
    aws-alt:

        # note! all aws-alt configurations below will be inherited by all projects.

        fresh:
            description: uses a public Ubuntu AMI instead of an elife generated basebox.
            ec2:
                # should be the same as basebox '18.04' and 'standalone18.04' aws-alt configurations
                ami: ami-0b425589c7bb7663d # bionic, build 20180814, hvm:ebs-ssd
        1804:
            description: Ubuntu 18.04 (Bionic)
            ec2: true # explicitly specify an 18.04 ami when 18.04 is no longer the default (2023?)
        # deprecated
        1604:
            description: uses Ubuntu 16.04 (Xenial)
            ec2:
                ami: ami-14a1d06e # GENERATED created from basebox--1604
                                  # us-east-1, build date 20170811, hvm:ebs-ssd, AMI built on 20171215
        # deprecated
        1404:
            description: uses Ubuntu 14.04 (Trusty)
            ec2:
                ami: ami-92002785 # created from a 14.04 basebox instance "basebox.2016-11-03"
                                  # possibly based on ami-9eaa1cf6 (see basebox aws-alt 14.04)
        # 18.04
        standalone1804:
            description: isolated from the master-server and uses Ubuntu 18.04 (Bionic)
            ec2:
                ami: ami-05ef127698ebcd429 # GENERATED created from basebox--1804
                                           # us-east-1, build date 20180814, hvm:ebs-ssd, AMI built on 20180828
                masterless: true
        s1804:
            description: alias for standalone1804
            ec2:
                ami: ami-05ef127698ebcd429 # GENERATED created from basebox--1804
                                           # us-east-1, build date 20180814, hvm:ebs-ssd, AMI built on 20180828
                masterless: true
        # 16.04, deprecated
        standalone1604:
            description: isolated from the master-server and uses Ubuntu 16.04 (Xenial)
            ec2:
                ami: ami-14a1d06e # GENERATED created from basebox--1604
                                  # us-east-1, build date 20170811, hvm:ebs-ssd, AMI built on 20171215
                masterless: true
        # 16.04, deprecated
        s1604:
            description: alias for standalone1604 short enough to fit into hostnames
            ec2:
                ami: ami-14a1d06e # GENERATED created from basebox--1604
                                  # us-east-1, build date 20170811, hvm:ebs-ssd, AMI built on 20171215
                masterless: true
        # 14.04, deprecated
        standalone1404:
            description: isolated from the master-server and uses (deprecated) Ubuntu 14.04 (Trusty)
            type: t2.small
            ec2:
                ami: ami-92002785 # Ubuntu 14.04, deprecated
                masterless: true
        # 18.04, same as default
        standalone:
            description: isolated from the master-server and uses same AMI as default configuration
            ec2:
                masterless: true
    gcp:
        bigquery: false
    vagrant:
        # why 'bento' and not 'ubuntu'? https://bugs.launchpad.net/cloud-images/+bug/1569237
        box: bento/ubuntu-18.04
        # 16.04, deprecated
        #box: bento/ubuntu-16.04
        # 14.04, deprecated
        #box: ubuntu/trusty64
        ip: 192.168.33.44
        ram: 2048
        cpus: 2
        cpucap: 100 # percent (vagrant default)
        # port mapping from host => guest
        #ports:
        #    1239: 80
        #    1240: 8001

builder:
    formula-repo: https://github.com/elifesciences/builder-formula
    vagrant:
        box: bento/ubuntu-16.04

basebox:
    formula-repo: https://github.com/elifesciences/basebox-formula
    aws:
        ec2:
            ami: ami-9eaa1cf6 # Ubuntu 14.04 (correct, but older)
        ports:
            - 22
    aws-alt:
        standalone:
            # for now a copy of standalone1404
            # required by masterless module
            description: isolated from the master-server and uses (deprecated) Ubuntu 14.04 (Trusty)
            ec2:
                ami: ami-92002785 # Ubuntu 14.04, deprecated
                masterless: true

        # overrides to default aws-alt configurations to use non-basebox AMIs
        
        1404:
            ec2:
                ami: ami-9eaa1cf6 # trusty
        1604:
            ec2:
                ami: ami-0cfee17793b08a293 # xenial, build 20190628, amd64, hvm:ebs-ssd, us-east-1
        1804:
            ec2:
                # should match aws-alt 'fresh'
                ami: ami-0b425589c7bb7663d # bionic, build 20180814, hvm:ebs-ssd

        # overrides to default aws-alt configurations to use non-basebox AMIs and run isolated from master-server

        # 14.04, deprecated
        standalone1404:
            description: isolated from the master-server and uses Ubuntu 14.04 (Trusty)
            ec2:
                ami: ami-9eaa1cf6 # trusty
        # 16.04, deprecated
        standalone1604:
            description: isolated from the master-server and uses Ubuntu 16.04 (Xenial)
            ec2:
                ami: ami-0cfee17793b08a293 # xenial, build 20190628, amd64, hvm:ebs-ssd, us-east-1
        # 18.04
        standalone1804:
            description: isolated from the master-server and uses Ubuntu 18.04 (Bionic)
            ec2:
                # should match aws-alt 'fresh'
                ami: ami-0b425589c7bb7663d # bionic, build 20180814, hvm:ebs-ssd
    vagrant: {}

heavybox:
    description: builds as many of the builder-base-formula states as possible
    formula-repo: https://github.com/elifesciences/heavybox-formula
    aws:
        ports:
            - 22
        ext:
            size: 10 # GB
    aws-alt:
        standalone:
            # for now a copy of standalone1404
            # required by masterless module
            description: isolated from the master-server and uses (deprecated) Ubuntu 14.04 (Trusty)
            ec2:
                ami: ami-92002785 # Ubuntu 14.04, deprecated
                masterless: true
    vagrant: {}

master-server:
    subdomain: master-server
    # formula-repo for the 'master-server' project should contain the
    # confidential pillar data, master config and state top file.
    # see: https://github.com/elifesciences/builder-private
    formula-repo: https://github.com/elifesciences/master-server-formula
    aws:
        ec2:
            # 16.04, deprecated
            ami: ami-14a1d06e # GENERATED created from basebox--1604
                              # us-east-1, build date 20170811, hvm:ebs-ssd, AMI built on 20171215
        ports:
            - 22
            - 4506: # salt publish port
                # CIDR of subnet this master will server
                cidr-ip: 10.0.0.0/16 # access via VPC ip range only
            - 4505: # salt return port
                cidr-ip: 10.0.0.0/16
            - 8080 # chemist, Github webhooks for formulas
            - 8200 # Vault, secrets management
    aws-alt:
        '2018-04-09-2':
            subdomains:
                - master-server
    vagrant:
        # 16.04, deprecated
        box: bento/ubuntu-16.04
        ports:
            8200: 8200 # Vault GUI

lax:
    description: article-json store
    subdomain: lax # lax.elifesciences.org
    repo: https://github.com/elifesciences/lax.git
    formula-repo: https://github.com/elifesciences/lax-formula
    aws:
        ports:
            - 22
            - 443
            - 80:
                cidr-ip: 10.0.0.0/16 # internal access only
            - 8001 # bot-lax api
        sqs:
            bot-lax-{instance}-inc: {}
            bot-lax-{instance}-out: {}
    aws-alt:
        standalone1404:
            rds:
                version: '9.4'
                storage: 5
                deletion-policy: Delete
        ci:
            ec2:
                cpu-credits: unlimited
        end2end:
            description: production-like
            ec2:
                cluster-size: 2
            rds:
                version: '9.4'
                storage: 5
                backup-retention: 2 # days
            ext:
                size: 10 # GB
            elb:
                protocol:
                    - https
                additional_listeners:
                    bot_lax_adaptor:
                        protocol: https
                        port: 8001
                healthcheck:
                    path: /api/v2/ping
        prod:
            description: RDS backed
            ec2:
                cluster-size: 2
            rds:
                version: '9.4'
                storage: 5
                multi-az: true
            ext:
                size: 10 # GB
            elb:
                protocol:
                    - https
                additional_listeners:
                    bot_lax_adaptor:
                        protocol: https
                        port: 8001
                healthcheck:
                    path: /api/v2/ping
    vagrant:
        ports:
            1239: 80
            1240: 8001

api-gateway:
    subdomain: gateway # "gateway.elifesciences.org"
    formula-repo: https://github.com/elifesciences/api-gateway-formula
    aws:
        ec2:
            ami: ami-14a1d06e # GENERATED created from basebox--1604
                              # us-east-1, build date 20170811, hvm:ebs-ssd, AMI built on 20171215
        ports:
            - 22
            # only internal traffic has access to port 80 and http
            - 80:
                cidr-ip: 10.0.0.0/16
            # the world must use https
            - 443
            # - 8000: # don't expose this to public. Kong uses this to proxy requests
            # - 8001: # don't ever expose to public. Kong uses this for API admin
        fastly:
            subdomains:
                - "{instance}--cdn-gateway"
            healthcheck:
                path: /ping-fastly
                check-interval: 10000
                timeout: 2000
            vcl:
                - "original-host"
                - "gzip-by-content-type-suffix"
            gcslogging:
                bucket: "{instance}-elife-fastly"
                path: "api-gateway--{instance}/"
                period: 600
            bigquerylogging:
                project: "elife-fastly"
                dataset: "{instance}"
                table: "api_gateway"
    aws-alt:
        standalone:
            fastly: false
        s1604:
            fastly: false
        s1804:
            fastly: false
        end2end: {}
        continuumtest:
            fastly:
                bigquerylogging:
                    dataset: staging
                gcslogging:
                    bucket: staging-elife-fastly
        prod:
            fastly:
                subdomains:
                    - "{instance}--cdn-gateway"
                    - api
    vagrant:
        box: bento/ubuntu-16.04 # 16.04, deprecated
        ports:
            1323: 80

journal:
    subdomain: journal # journal.elifesciences.org
    intdomain: null
    repo: https://github.com/elifesciences/journal
    formula-repo: https://github.com/elifesciences/journal-formula
    formula-dependencies:
        - https://github.com/elifesciences/builder-base-formula
        - https://github.com/elifesciences/api-dummy-formula
    aws:
        ports:
            - 22
            - 443
            - 80:
                cidr-ip: 10.0.0.0/16 # access via VPC ip range only
    aws-alt:
        ci:
            #type: t2.2xlarge
            type: c4.2xlarge
            ports:
                - 22
                - 443
        end2end:
            description: end2end environment for journal. ELB on top of multiple EC2 instances
            ec2:
                cluster-size: 2
            elasticache:
                engine: redis
                clusters: 2
                overrides:
                    2:
                        type: cache.t2.micro
            elb:
                protocol:
                    - https
                    - http
            fastly:
                subdomains:
                    - "{instance}--cdn-journal"
                healthcheck:
                    path: /ping-fastly
                    check-interval: 10000
                    timeout: 2000
                errors:
                    # always prod for simplicity
                    url: https://prod-elife-error-pages.s3.amazonaws.com/
                    codes:
                        404: "404.html"
                        410: "410.html"
                        503: "503.html"
                    fallbacks:
                        4xx: "4xx.html"
                        5xx: "5xx.html"
                ip-blacklist: true # maintained at https://manage.fastly.com/configure/services/1WzbLJKoGqzOF1IrhTNx2M/versions/19/data/acls
                vcl:
                    - "original-host"
                    - "ping-status"
                    - "strip-non-journal-cookies"
                    - "journal-google-scholar"
                    - "journal-google-scholar-vary"
                gcslogging:
                    bucket: "{instance}-elife-fastly"
                    path: "journal--{instance}/"
                    period: 600
                bigquerylogging:
                    project: "elife-fastly"
                    dataset: "{instance}"
                    table: "journal"
        continuumtest:
            elasticache:
                engine: redis
                type: cache.t2.micro
                clusters: 2
            elb:
                protocol:
                    - https
                    - http
            fastly:
                subdomains:
                    - "{instance}--cdn-journal"
                healthcheck:
                    path: /ping-fastly
                    check-interval: 10000
                    timeout: 2000
                errors:
                    # always prod for simplicity
                    url: https://prod-elife-error-pages.s3.amazonaws.com/
                    codes:
                        404: "404.html"
                        410: "410.html"
                        503: "503.html"
                    fallbacks:
                        4xx: "4xx.html"
                        5xx: "5xx.html"
                ip-blacklist: true # maintained at https://manage.fastly.com/configure/services/6fX98C3dDfqypuWzfAh0bN/versions/78/data/acls
                vcl:
                    - "original-host"
                    - "ping-status"
                    - "strip-non-journal-cookies"
                    - "journal-google-scholar"
                    - "journal-google-scholar-vary"
                gcslogging:
                    bucket: staging-elife-fastly
                    path: "journal--{instance}/"
                    period: 600
                bigquerylogging:
                    project: "elife-fastly"
                    dataset: "staging"
                    table: "journal"
        prod:
            description: prod environment for journal. ELB on top of multiple EC2 instances
            ec2:
                cluster-size: 3
            elasticache:
                engine: redis
                type: cache.t2.medium # 3.22 GB of memory, ~$50/mo
                clusters: 2
                overrides:
                    2:
                        type: cache.t2.micro # 0.56 GB of memory, ~$12/mo
            elb:
                protocol:
                    - https
                    - http
            cloudfront:
                subdomains:
                    - "placeholder2-prod-journal" # only here to avoid rewriting the following values
                    - www
                    - elife
                    - prod
                headers:
                    - Host
                errors:
                    domain: prod-elife-error-pages.s3-website-us-east-1.amazonaws.com
                    pattern: "???.html"
                    codes:
                        # ELB with no active instances
                        503: "/5xx.html"
                    protocol: http
            fastly:
                subdomains:
                    - "{instance}--cdn-journal"
                    - "placeholder-prod-journal" # only here to avoid rewriting the following values
                    - ""
                healthcheck:
                    path: /ping-fastly
                    check-interval: 10000
                    timeout: 2000
                errors:
                    # always prod for simplicity
                    url: https://prod-elife-error-pages.s3.amazonaws.com/
                    codes:
                        404: "404.html"
                        410: "410.html"
                        503: "503.html"
                    fallbacks:
                        4xx: "4xx.html"
                        5xx: "5xx.html"
                ip-blacklist: true # maintained at https://manage.fastly.com/configure/services/7iWUGx8Bl9k3qZvJf0K0hc/versions/34/data/acls
                vcl:
                    - "original-host"
                    - "ping-status"
                    - "strip-non-journal-cookies"
                    - "journal-google-scholar"
                    - "journal-google-scholar-vary"
                gcslogging:
                    bucket: "{instance}-elife-fastly"
                    path: "journal--{instance}/"
                    period: 600
                bigquerylogging:
                    project: "elife-fastly"
                    dataset: "{instance}"
                    table: "journal"
    vagrant:
        ram: 4096
        ports:
            1240: 80

pattern-library:
    subdomain: ui-patterns
    repo: https://github.com/elifesciences/pattern-library
    formula-repo: https://github.com/elifesciences/pattern-library-formula
    aws:
        ports:
            - 22
            - 80
            - 443
    aws-alt:
        ci:
            ec2: false
            s3:
                "{instance}-pattern-library":
                    public: true
        prod:
            subdomains:
                - ui-patterns
    vagrant:
        ports:
            1340: 80

elife-metrics:
    description: journal-level metrics
    subdomain: metrics # metrics.elifesciences.org
    repo: https://github.com/elifesciences/elife-metrics
    formula-repo: https://github.com/elifesciences/elife-metrics-formula
    aws:
        ports:
            - 22
            - 443
            - 80
            - 5432
    aws-alt:
        end2end:
            description: end2end environment for metrics. RDS backed
            rds:
                backup-retention: 2 # days
        prod:
            description: production environment for metrics. RDS backed
            ext:
                size: 10 # GB
            rds:
                multi-az: true
                storage: 20
    vagrant:
        ports:
            1240: 80

elife-bot:
    repo: https://github.com/elifesciences/elife-bot
    formula-repo: https://github.com/elifesciences/elife-bot-formula
    subdomain: bot
    # ip: 54.164.145.166 # bot.elifesciences.org must be available at this IP
    aws:
        ec2:
            ami: ami-14a1d06e # GENERATED created from basebox--1604
                              # us-east-1, build date 20170811, hvm:ebs-ssd, AMI built on 20171215
        type: t2.medium
        ports:
            - 22
            # TODO: close this port to outside the VPC
            - 80
        ext:
            size: 30 # GB
        s3:
            "{instance}-elife-silent-corrections":
            "{instance}-elife-published":
                deletion-policy: retain
                public: true
                cors: true
            "{instance}-elife-bot-sessions":
            "{instance}-elife-bot-digests-input":
        sns:
            # elife-bot-event-property--prod, elife-bot-event-property--end2end, etc.
            - elife-bot-event-property--{instance}
    aws-alt:
        s1604:
            s3:
                "{instance}-elife-silent-corrections":
                    deletion-policy: delete
                "{instance}-elife-published":
                    deletion-policy: delete
                "{instance}-elife-bot-sessions":
                    deletion-policy: delete
                "{instance}-elife-bot-digests-input":
                    deletion-policy: delete
                # commented out because buckets already exist outside of CloudFormation:
                #"{instance}-elife-bot":
                #    deletion-policy: delete
        standalone:
            s3:
                "{instance}-elife-silent-corrections":
                    deletion-policy: delete
                "{instance}-elife-published":
                    deletion-policy: delete
                "{instance}-elife-bot-sessions":
                    deletion-policy: delete
                "{instance}-elife-bot-digests-input":
                    deletion-policy: delete
                # commented out because buckets already exist outside of CloudFormation:
                #"{instance}-elife-bot":
                #    deletion-policy: delete
        end2end:
            ports:
                - 22
                - 8020 # exposing FTP contents
                - 8021 # exposing FTP contents, HTTPS
                - 1080 # exposing mailcatcher API
            description: speeding up end2end tests
            s3:
                "{instance}-elife-silent-corrections":
                    sqs-notifications:
                        end2end-incoming-queue: {}
                "{instance}-elife-bot-digests-input":
                    sqs-notifications:
                        end2end-incoming-queue: {}
                "{instance}-elife-ejp-poa-delivery":
                    deletion-policy: delete
            #    end2end-elife-production-final:
            #        sqs-notifications:
            #            end2end-incoming-queue: {}
            #               #prefix: null
            #               #suffix: null
        continuumtest:
            s3:
                "{instance}-elife-silent-corrections":
                    sqs-notifications:
                        ct-incoming-queue: {}
                "{instance}-elife-bot-digests-input":
                    sqs-notifications:
                        ct-incoming-queue: {}
                "{instance}-elife-bot":
                    deletion-policy: delete
                "{instance}-elife-ejp-poa-delivery":
                    deletion-policy: delete
        prod:
            # don't change type through CloudFormation because the template is too old to be modified successfully
            #type: c5.2xlarge
            s3:
                "{instance}-elife-silent-corrections":
                    sqs-notifications:
                        incoming-queue: {}
                "{instance}-elife-bot-digests-input":
                    sqs-notifications:
                        incoming-queue: {}
                # already existing bucket, do not uncomment
                #"{instance}-elife-ejp-poa-delivery":
                #    deletion-policy: retain
    vagrant:
        box: bento/ubuntu-16.04 # 16.04, deprecated

generic-cdn:
    description: generic CDN for content like PDF, images
    default-branch: null
    intdomain: null
    aws:
        ec2: false
        fastly:
            subdomains:
                - "{instance}-cdn"
            backends:
                # first is default
                default:
                    hostname: elife-cdn.s3.amazonaws.com
                articles:
                    hostname: "{instance}-elife-published.s3.amazonaws.com"
                    condition: req.url ~ "^/articles/"
            default-ttl: 86400 # seconds
            vcl:
                - "original-host"
                - "office-webdav-200"
            surrogate-keys:
                article-versioned-assets:
                    url: "^/articles/([0-9]+)/elife-([a-z-0-9]+)-v([0-9]+)\\.(.+)$"
                    value: "article/\\1 article/\\1v\\3"
                    samples:
                        article-asset:
                            path: /articles/10627/elife-10627-fig1-v1.tif
                            expected: "article/10627 article/10627v1"
                        article-pdf:
                            path: /articles/10627/elife-10627-v1.pdf
                            expected: "article/10627 article/10627v1"
                        article-figures-pdf:
                            path: /articles/00666/elife-00666-figures-v1.pdf
                            expected: "article/00666 article/00666v1"
                        article-figure-supplement:
                            path: /articles/00666/elife-00666-fig2-figsupp1-v1.tif
                            expected: "article/00666 article/00666v1"
                        appendix-figure-supplement:
                            path: /articles/18215/elife-18215-app2-fig1-figsupp2-v2.tif
                            expected: "article/18215 article/18215v2"
                        # legacy, not supported: /articles/10627/elife-10627-fig1-v1-download.jpg
                        # legacy, not supported: /articles/10627/elife-10627-fig1-v1-972w.jpg
                article-unversioned:
                    url: "^/articles/([0-9]+)/elife-([a-z-0-9]+)-(video|media)([0-9]+)\\.(.+)$"
                    value: "article/\\1 article/\\1/videos"
                    samples:
                        article-video:
                            path: /articles/34773/elife-34773-video2.mp4
                            expected: "article/34773 article/34773/videos"
                        article-still:
                            path: /articles/07398/elife-07398-media1.jpg
                            expected: "article/07398 article/07398/videos"
                        article-figure-video:
                            path: /articles/26866/elife-26866-fig3-video1.mp4
                            expected: "article/26866 article/26866/videos"
            bigquerylogging:
                project: "elife-fastly"
                dataset: "{instance}"
                table: "generic_cdn"
    aws-alt:
        # have to specify this because otherwise configuration such as `fresh` inherited from defaults 
        # won't see the ec2: false in `aws:` and test_validation.py will fail for all of them?
        fresh:
            ec2: false
        1804:
            ec2: false
        1604:
            ec2: false
        s1604:
            ec2: false
        1404:
            ec2: false
        s1804:
            ec2: false
        standalone1604:
            ec2: false
        standalone1404:
            ec2: false
        standalone:
            ec2: false
        end2end:
            fastly:
                gcslogging:
                    bucket: end2end-elife-fastly
                    path: generic-cdn--end2end/
                    period: 600
        continuumtest:
            fastly:
                gcslogging:
                    bucket: staging-elife-fastly
                    path: generic-cdn--continuumtest/
                    period: 600
                bigquerylogging:
                    dataset: "staging"
        prod:
            fastly:
                subdomains:
                    - "cdn"
                gcslogging:
                    bucket: prod-elife-fastly
                    path: generic-cdn--prod/
                    period: 600

journal-cms:
    subdomain: journal-cms # journal-cms.elifesciences.org
    repo: https://github.com/elifesciences/journal-cms
    formula-repo: https://github.com/elifesciences/journal-cms-formula
    formula-dependencies:
        - https://github.com/elifesciences/builder-base-formula
        - https://github.com/elifesciences/api-dummy-formula
    aws:
        # deprecated
        ec2:
            ami: ami-14a1d06e # GENERATED created from basebox--1604
                              # us-east-1, build date 20170811, hvm:ebs-ssd, AMI built on 20171215
        ports:
            - 22
            - 443
            - 80:
                cidr-ip: 10.0.0.0/16 # access via VPC ip range only
        sqs:
            # journal-cms--prod, journal-cms--end2end, etc.
            journal-cms--{instance}:
                subscriptions:
                    - bus-articles--{instance}
                    - bus-digests--{instance}
                    - bus-metrics--{instance}
    aws-alt:
        ckeditor:
            description: testing environment. backed by RDS
            ext:
                size: 10 # GB
        ci:
            ext:
                size: 5 # GB
        end2end:
            description: production-like environment. backed by RDS
            rds:
                type: db.t2.medium
                engine: MySQL
                version: '5.7'
                storage: 12 # GB
                backup-retention: 2 # days
            ext:
                size: 30 # GB
        continuumtest:
            description: production-like environment.
            rds:
                type: db.t2.small
                engine: MySQL
                version: '5.7.23'
                storage: 48 # GB
                backup-retention: 2 # days
            ext:
                size: 60 # GB
        prod:
            description: production environment. backed by RDS
            rds:
                type: db.t2.medium
                engine: MySQL
                version: '5.7.23'
                multi-az: true
                storage: 48 # GB
            ext:
                size: 60 # GB
    vagrant:
        # 16.04, deprecated
        box: bento/ubuntu-16.04
        ports:
            1241: 80


elife-dashboard:
    subdomain: ppp-dash # ppp-dash.elifesciences.org
    repo: https://github.com/elifesciences/elife-dashboard
    formula-repo: https://github.com/elifesciences/elife-dashboard-formula
    default-branch: develop
    aws:
        ports:
            - 22
            - 80 # dashboard
            - 443 # dashboard
            - 8081 # dashboard_2
            - 8082 # dashboard_2
    aws-alt:
        end2end:
            description: production-like environment. backed by RDS
            rds:
                storage: 5
                backup-retention: 2 # days
            sqs:
                # legacy custom name
                end2end-event-property-incoming-queue:
                    subscriptions:
                        - elife-bot-event-property--end2end
        continuumtest:
            sqs:
                # legacy custom name
                ct-event-property-incoming-queue:
                    subscriptions:
                        - elife-bot-event-property--continuumtest
        prod:
            description: production environment. backed by RDS
            rds:
                storage: 5
                multi-az: true
            sqs:
                # legacy custom name
                event-property-incoming-queue:
                    subscriptions:
                        - elife-bot-event-property--prod
    vagrant:
        ports:
            1324: 80
            8080: 8080 # scheduler (blocked on AWS)


# legacy API, do not use nor upgrade
elife-api:
    subdomain: api # api.elifesciences.org
    repo: https://github.com/elifesciences/elife-api
    formula-repo: https://github.com/elifesciences/elife-api-formula
    aws:
        # ip: 52.72.250.79 # legacy--api.elifesciences.org
        ec2:
            ami: ami-92002785 # Ubuntu 14.04, deprecated
        ports:
            - 22
            - 80
            - 443
    aws-alt: {}
    vagrant:
        box: ubuntu/trusty64 # Ubuntu 14.04, deprecated
        ports:
            1233: 80

elife-reporting:
    formula-repo: https://github.com/elifesciences/elife-reporting-formula
    vagrant:
        box: ubuntu/trusty64 # Ubuntu 14.04, deprecated
        ram: 1024
        ports:
            1333: 80

elife-libraries:
    domain: false
    subdomain: libraries
    formula-repo: https://github.com/elifesciences/elife-libraries-formula
    aws:
        ec2:
            # 16.04, deprecated
            ami: ami-14a1d06e # GENERATED created from basebox--1604
                              # us-east-1, build date 20170811, hvm:ebs-ssd, AMI built on 20171215
        ports:
            - 22
        ext:
            size: 30 # GB
            type: gp2
    aws-alt:
        ci:
            description: running unit tests
        load:
            description: running load tests
            type: t2.2xlarge
        spectrum:
            description: running end2end tests
            # 2 core, 8 GB of memory
            type: t2.medium
            ext:
                size: 10 # GB
        powerful:
            description: speeding up bot-lax-adaptor tests
            type: c4.2xlarge
        powerful2:
            description: speeding up bot-lax-adaptor tests even more
            type: c4.4xlarge
        powerful3:
            description: speeding up bot-lax-adaptor tests even more
            type: c4.8xlarge
    vagrant:
        box: bento/ubuntu-16.04 # 16.04, deprecated
        ram: 1024

containers:
    description: run any Docker-based workload
    domain: false
    intdomain: false
    formula-repo: https://github.com/elifesciences/containers-formula
    aws:
        ec2:
            # 16.04, deprecated
            ami: ami-14a1d06e # GENERATED created from basebox--1604
                              # us-east-1, build date 20170811, hvm:ebs-ssd, AMI built on 20171215
        type: t2.medium # 4GB of RAM
        ports:
            - 22
        ext:
            size: 100 # GB
            type: gp2
    aws-alt:
        # AMIs created from here used in
        # https://alfred.elifesciences.org/configure
        # `Cloud` section
        jenkins-plugin-ami:
            ext: false
            ec2:
                root:
                    size: 100 # GB
                    type: gp2
        xlarge:
            type: t2.xlarge # 4 CPUs
            ec2:
                cpu-credits: unlimited
    vagrant:
        box: bento/ubuntu-16.04 # 16.04, deprecated
        ram: 1024

elife-alfred:
    subdomain: alfred
    formula-repo: https://github.com/elifesciences/elife-alfred-formula
    aws:
        ec2:
            # 16.04, deprecated
            ami: ami-14a1d06e # GENERATED created from basebox--1604
                              # us-east-1, build date 20170811, hvm:ebs-ssd, AMI built on 20171215
        type: t2.large
        ports:
            - 22
            - 80
            - 443
            - 10241 # JNLP for jenkins-cli.jar
            - 16022 # Jenkins SSH port
        ext:
            size: 100 # GB
            type: gp2
        s3:
            "{instance}-elife-alfred":
                deletion-policy: retain
    aws-alt:
        standalone:
            s3:
                "{instance}-elife-alfred":
                    deletion-policy: delete
        prod:
            subdomains:
                - alfred
                - ci--alfred # backward compatibility
    vagrant:
        box: bento/ubuntu-16.04 # 16.04, deprecated
        ram: 4096
        ports:
            1433: 80

# used in https://alfred.elifesciences.org/configure
# `Cloud` section
elife-alfred-nodes:
    description: supports dynamic creation of EC2 instances from Jenkins
    domain: false
    intdomain: false
    aws:
        ec2:
            cluster-size: 0
            security-group:
                ports:
                    - 22
            

api-dummy:
    subdomain: api-dummy
    repo: https://github.com/elifesciences/api-dummy
    formula-repo: https://github.com/elifesciences/api-dummy-formula
    aws:
        type: t2.micro
        ports:
            - 22
            - 443
            - 80
    aws-alt: {}
    vagrant:
        ports:
            1242: 80

# used by "Maloney, Christopher (NIH/NLM/NCBI) [C]" <maloneyc@ncbi.nlm.nih.gov>
# this is a free form instance jats4r can do what they like with
# hosts http://jatswiki.org at the moment
jats4r:
    aws:
        ec2:
            ami: ami-c60b90d1 # us-east-1 xenial 16.04 LTS amd64 hvm:ebs-ssd 20160815 hvm
        type: t2.micro
        ports:
            - 22
            - 80
            - 443


bus:
    description: see https://github.com/elifesciences/bus
    default-branch: null
    domain: null
    intdomain: null
    aws:
        ec2: false
        sns:
            # bus-articles--prod, bus-articles--end2end, etc.
            - bus-articles--{instance}
            - bus-podcast-episodes--{instance}
            - bus-subjects--{instance}
            - bus-people--{instance}
            - bus-collections--{instance}
            - bus-events--{instance}
            - bus-interviews--{instance}
            - bus-blog-articles--{instance}
            - bus-annual-reports--{instance}
            - bus-covers--{instance}
            - bus-labs-posts--{instance}
            - bus-press-packages--{instance}
            - bus-metrics--{instance}
            - bus-profiles--{instance}
            - bus-digests--{instance}

search:
    domain: false
    subdomain: search
    repo: https://github.com/elifesciences/search
    formula-repo: https://github.com/elifesciences/search-formula
    formula-dependencies:
        - https://github.com/elifesciences/builder-base-formula
        - https://github.com/elifesciences/api-dummy-formula
    aws:
        type: t2.medium
        ec2:
            cpu-credits: unlimited
        ports:
            - 22
            - 80:
                cidr-ip: 10.0.0.0/16 # internal access only
        sqs:
            # search--prod, search--end2end, etc.
            search--{instance}:
                subscriptions:
                    - bus-articles--{instance}
                    - bus-podcast-episodes--{instance}
                    - bus-subjects--{instance}
                    - bus-collections--{instance}
                    - bus-interviews--{instance}
                    - bus-blog-articles--{instance}
                    - bus-labs-posts--{instance}
    aws-alt:
        end2end:
            ports:
                - 22
                - 80:
                    cidr-ip: 10.0.0.0/16 # ELB only
                - 4730: # Gearman
                    cidr-ip: 10.0.0.0/16 # follower nodes
                - 9200: # ElasticSearch
                    cidr-ip: 10.0.0.0/16 # follower nodes
            ec2:
                cluster-size: 2
                dns-internal: true
            elb: 
                protocol: 
                    - http
        prod:
            ports:
                - 22
                - 80:
                    cidr-ip: 10.0.0.0/16 # ELB only
                - 4730: # Gearman
                    cidr-ip: 10.0.0.0/16 # follower nodes
                - 9200: # ElasticSearch
                    cidr-ip: 10.0.0.0/16 # follower nodes
            ec2:
                cluster-size: 2
                dns-internal: true
            elb: 
                protocol: 
                    - http
    vagrant:
        ports:
            1244: 80
            1245: 8080
            9920: 9200

recommendations:
    domain: false
    subdomain: recommendations
    repo: https://github.com/elifesciences/recommendations
    formula-repo: https://github.com/elifesciences/recommendations-formula
    formula-dependencies:
        - https://github.com/elifesciences/builder-base-formula
        - https://github.com/elifesciences/api-dummy-formula
    aws:
        type: t2.medium # 4 GB of RAM, same as search for now.
        ports:
            - 22
            - 80:
                cidr-ip: 10.0.0.0/16 # internal access only
    aws-alt: {}
    vagrant:
        ports:
            1254: 80

personalised-covers:
    subdomain: personalised-covers
    repo: https://github.com/elifesciences/personalised-covers
    formula-repo: https://github.com/elifesciences/personalised-covers-formula
    formula-dependencies:
        - https://github.com/elifesciences/builder-base-formula
        - https://github.com/elifesciences/api-dummy-formula
    aws:
        type: t2.micro # 1 GB of RAM: Unsure memory stats for PDF generation.
        ports:
            - 22
            - 80
            - 443
        s3:
            "{instance}-elife-personalised-covers":
                deletion-policy: retain
    aws-alt:
        standalone:
            s3: false
        s1804:
            s3: false
        ci:
            ec2:
                cpu-credits: unlimited
        prod:
            subdomains:
                - covers
    vagrant:
        ram: 1024
        ports:
            1246: 80
            1247: 8080

schematron-validator:
    subdomain: schematron-validator
    default-branch: master
    repo: https://github.com/elifesciences/schematron-validator
    formula-repo: https://github.com/elifesciences/schematron-validator-formula
    formula-dependencies:
        - https://github.com/elifesciences/builder-base-formula
    aws:
        ec2:
            ami: ami-14a1d06e # GENERATED created from basebox--1604
                              # us-east-1, build date 20170811, hvm:ebs-ssd, AMI built on 20171215`
        ports:
            - 22
            - 80
            - 443
    aws-alt:
        prod:
            subdomains:
                - schematron
    vagrant:
        box: bento/ubuntu-16.04 # 16.04, deprecated
        ports:
            1246: 80
            1247: 8080

observer:
    description: article-level reporting
    subdomain: observer # observer.elifesciences.org
    repo: https://github.com/elifesciences/observer
    formula-repo: https://github.com/elifesciences/observer-formula
    aws:
        # ip: 34.201.187.7 # observer--prod, points to observer.elifesciences.org
        type: t2.medium
        ports:
            - 22
            - 80
            - 8001
            - 443
        sqs:
            observer--{instance}:
                subscriptions:
                    - bus-articles--{instance}
                    - bus-press-packages--{instance}
    aws-alt:
        standalone1404:
            rds:
                storage: 10
                backup-retention: 2 # days
                deletion-policy: Delete
        end2end:
            description: production-like environment. RDS backed
            rds:
                storage: 10
                backup-retention: 2 # days
        prod:
            description: production environment. RDS backed
            rds:
                storage: 10
                multi-az: true
    vagrant:
        ports:
            1239: 80
            1240: 8001

error-pages:
    description: static deployment of https://github.com/elifesciences/error-pages
    default-branch: null
    domain: null
    intdomain: null
    aws:
        ec2: false
        s3:
            "{instance}-elife-error-pages":
                website-configuration:
                    index-document: index.html
                cors: true

figure-viewer:
    description: static deployment of https://github.com/elifesciences/figure-viewer
    default-branch: null
    domain: null
    intdomain: null
    aws:
        ec2: false
        s3:
            "{instance}-elife-figure-viewer":
                website-configuration:
                    index-document: index.html

peerscout:
    description: PeerScout
    subdomain: peerscout
    repo: https://github.com/elifesciences/peerscout
    formula-repo: https://github.com/elifesciences/peerscout-formula
    aws:
        type: t2.xlarge # explicitly 16GB RAM for heavy background processing
        ports:
            - 22
            - 80
            - 443
        ext:
            # external hdd
            size: 20 # GB
            device: /dev/sdf
    aws-alt:
        end2end:
            rds:
                version: '9.4'
                storage: 5
                backup-retention: 2 # days
            ext:
                # external hdd
                size: 100 # GB
                device: /dev/sdf
        prod:
            rds:
                version: '9.4'
                storage: 5
                multi-az: true
            ext:
                # external hdd
                size: 100 # GB
                device: /dev/sdf
            subdomains:
                - peerscout
    vagrant:
        ports:
            1241: 80
        ram: 4096

sciencebeam-texture:
    description: Sciencebeam and Texture proof of concept
    subdomain: sciencebeam-texture
    repo: https://github.com/elifesciences/sciencebeam-texture
    formula-repo: https://github.com/elifesciences/sciencebeam-texture-formula
    aws:
        ec2:
            ami: ami-14a1d06e # GENERATED created from basebox--1604, deprecated
                              # us-east-1, build date 20170811, hvm:ebs-ssd, AMI built on 20171215
        type: t2.medium # 4 GB RAM
        ports:
            - 22
            - 80 # texture
            - 443 # texture
        ext:
            size: 10 # GB
    aws-alt:
        demo:
            subdomains:
                - sciencebeam-texture
    vagrant:
        box: bento/ubuntu-16.04 # Ubuntu 16.04, deprecated
        ports:
            1222: 80

iiif:
    description: IIIF, image server for resizing/tiling/zooming
    subdomain: iiif
    intdomain: null
    repo: https://github.com/elifesciences/loris
    formula-repo: https://github.com/elifesciences/iiif-formula
    aws:
        type: t2.medium
        ports:
            - 22
            - 80
            - 443
        fastly:
            subdomains:
                - "{instance}--cdn-iiif"
            gcslogging:
                bucket: "{instance}-elife-fastly"
                path: "iiif--{instance}/"
                period: 600
            bigquerylogging:
                project: "elife-fastly"
                dataset: "{instance}"
                table: "iiif"
            healthcheck:
                path: /ping-fastly
                check-interval: 10000
                timeout: 2000
            surrogate-keys:
                article-id-versioned:
                    url: "^/lax[:/]([0-9]+)(?:/|%252F)elife-(?:[a-z0-9-]+)-v([0-9]+)\\.(?:.+)$"
                    value: "article/\\1 article/\\1v\\2"
                    samples:
                        figure:
                            path: /lax:10627/elife-10627-fig1-v1.tif/full/1500,/0/default.jpg
                            expected: "article/10627 article/10627v1"
                        article-figure-supplement:
                            path: /lax:00666/elife-00666-fig2-figsupp1-v1.tif
                            expected: "article/00666 article/00666v1"
                        appendix-figure-supplement:
                            path: /lax:18215/elife-18215-app2-fig1-figsupp2-v2.tif
                            expected: "article/18215 article/18215v2"
                        encoded-urls:
                            path: /lax/18215%252Felife-18215-app2-fig1-figsupp2-v2.tif
                            expected: "article/18215 article/18215v2"
                article-id-unversioned:
                    url: "^/lax[:/]([0-9]+)(?:/|%252F)elife-(?:[a-z-0-9]+)-(?:video|media)(?:[0-9]+)\\.(?:.+)$"
                    value: "article/\\1 article/\\1/videos"
                    samples:
                        video-still:
                            path: /lax:34773/elife-34773-video2.jpg/full/639,/0/default.jpg
                            expected: "article/34773 article/34773/videos"
                        another-video-still:
                            path: /lax:07398/elife-07398-media1.jpg
                            expected: "article/07398 article/07398/videos"
                        article-figure-video-still:
                            path: /lax:26866/elife-26866-fig3-video1.jpg
                            expected: "article/26866 article/26866/videos"
                        encoded-urls:
                            path: /lax/26866%252Felife-26866-fig3-video1.jpg
                            expected: "article/26866 article/26866/videos"
                digest-id:
                    url: "^/digests/([0-9]+)(?:/|%252F)(?:.+)$"
                    value: "digest/\\1"
                    samples:
                        digest-image-info-json:
                            path: /digests/39984%252Fdigest-39984.jpg/info.json
                            expected: "digest/39984"
                        digest-image-full:
                            path: /digests/39984%252Fdigest-39984.jpg/full/full/0/default.jpg
                            expected: "digest/39984"
                        digest-image-resized:
                            path: /digests/39984%252Fdigest-39984.jpg/full/500,/0/default.jpg
                            expected: "digest/39984"
                        non-encoded-urls:
                            path: /digests/39984/digest-39984.jpg/info.json
                            expected: "digest/39984"
    aws-alt:
        standalone:
            fastly: false
        s1604:
            fastly: false
        s1804:
            fastly: false
        # for testing new versions
        ci:
            ports:
                - 22
                - 80:
                    cidr-ip: 10.0.0.0/16 # ELB only
            ec2:
                #suppressed: [2]
                overrides:
                    1:
                        ext:
                            type: gp2
                    2:
                        ext:
                            type: gp2
                cluster-size: 4
            ext:
                size: 30 # GB
            elb:
                protocol: 
                    - https
                healthcheck:
                    path: /
            fastly: false
        end2end:
            ports:
                - 22
                - 80:
                    cidr-ip: 10.0.0.0/16 # ELB only
            ec2:
                cluster-size: 2
                #suppressed: [1]
            ext:
                size: 30 # GB
            elb:
                protocol: 
                    - https
                healthcheck:
                    path: /
        # manual tests
        continuumtest:
            ports:
                - 22
                - 80:
                    cidr-ip: 10.0.0.0/16 # ELB only
            ec2:
                cluster-size: 2
            elb:
                protocol: 
                    - https
                healthcheck:
                    path: /
            fastly:
                bigquerylogging:
                    dataset: "staging"
                gcslogging:
                    bucket: staging-elife-fastly
        prod:
            ports:
                - 22
                - 80:
                    cidr-ip: 10.0.0.0/16 # ELB only
            ec2:
                cluster-size: 3
            ext:
                size: 30 # GB
            elb:
                protocol: 
                    - https
                healthcheck:
                    path: /
            fastly:
                subdomains:
                    - "{instance}--cdn-iiif"
                    - iiif
    vagrant:
        ports:
            1261: 80

redirects:
    description: redirect various domains to the canonical elifesciences.org
    subdomain: redirects
    intdomain: null
    formula-repo: https://github.com/elifesciences/redirects-formula
    aws:
        type: t2.nano
        ports:
            - 22
            - 80
            - 443
    aws-alt:
        s1804:
            type: t2.small
        prod:
            cloudfront:
                # arn:aws:iam::512686554592:server-certificate/cloudfront/redirects/2019-06-17.elifesciences.net
                certificate_id: ASCAXOXT77XQJYKX6YHQ5
                subdomains:
                    - elifesciences.net
                    - e-lifesciences.org
                    - e-lifesciences.net
                    - elifejournal.net
                    - e-lifejournal.org
                    - e-lifejournal.com
                    - e-lifejournal.net
                    - elifejournal.org
                headers:
                    - Host
    vagrant:
        ram: 512
        ports:
            1262: 80

profiles:
    subdomain: profiles
    repo: https://github.com/elifesciences/profiles
    formula-repo: https://github.com/elifesciences/profiles-formula
    aws:
        ec2:
            ami: ami-14a1d06e # GENERATED created from basebox--1604, deprecated
                              # us-east-1, build date 20170811, hvm:ebs-ssd, AMI built on 20171215
        ports:
            - 22
            - 80
            - 443
    aws-alt:
        end2end:
            rds:
                version: '9.4'
                engine: postgres
                storage: 5 # GB
                backup-retention: 2 # days
            ports:
                - 22
                - 80
                - 443
                - 8081 # orcid-dummy http
                - 8082 # orcid-dummy https
        prod:
            rds:
                version: '9.4'
                engine: postgres
                storage: 5 # GB
                multi-az: true
    vagrant:
        box: bento/ubuntu-16.04 # Ubuntu 16.04, deprecated
        ram: 1024
        ports:
            1265: 80

annotations:
    description: microservice that gives access to eLife annotations on Hypothes.is
    domain: false
    subdomain: annotations
    repo: https://github.com/elifesciences/annotations
    formula-repo: https://github.com/elifesciences/annotations-formula
    aws:
        ec2:
            ami: ami-14a1d06e # GENERATED created from basebox--1604, deprecated
                              # us-east-1, build date 20170811, hvm:ebs-ssd, AMI built on 20171215
        ports:
            - 22
            - 80:
                cidr-ip: 10.0.0.0/16 # internal access only
        sqs:
            annotations--{instance}:
                subscriptions:
                    - bus-profiles--{instance}
    aws-alt:
        prod:
            s3:
                "{instance}-elife-annotations-hypothesis-emails":
                    # bucket policy http://docs.aws.amazon.com/ses/latest/DeveloperGuide/receiving-email-permissions.html#receiving-email-permissions-s3 has been added
    vagrant:
        box: bento/ubuntu-16.04 # 16.04, deprecated
        ram: 1024
        ports:
            1248: 80

digests:
    subdomain: digests
    domain: false
    repo: https://github.com/elifesciences/digests
    formula-repo: https://github.com/elifesciences/digests-formula
    aws:
        ec2:
            ami: ami-14a1d06e # GENERATED created from basebox--1604, deprecated
                              # us-east-1, build date 20170811, hvm:ebs-ssd, AMI built on 20171215
        ports:
            - 22
            - 80:
                cidr-ip: 10.0.0.0/16 # access via VPC ip range only
    aws-alt:
        end2end:
            rds:
                version: '9.4'
                engine: postgres
                type: db.t2.micro
                storage: 5 # GB
                storage-type: gp2
                backup-retention: 2 # days
        continuumtest:
            rds:
                version: '9.4'
                engine: postgres
                type: db.t2.micro
                storage: 5 # GB
                storage-type: gp2
                backup-retention: 2 # days
        prod:
            rds:
                version: '9.4'
                engine: postgres
                type: db.t2.micro
                storage: 5 # GB
                storage-type: gp2
                multi-az: true
    vagrant:
        box: bento/ubuntu-16.04 # 16.04, deprecated
        ram: 1024
        ports:
            1290: 80

elife-xpub:
    subdomain: xpub
    repo: https://github.com/elifesciences/elife-xpub
    formula-repo: git@github.com:elifesciences/elife-xpub-formula
    aws:
        ec2:
            ami: ami-14a1d06e # GENERATED created from basebox--1604, deprecated
                              # us-east-1, build date 20170811, hvm:ebs-ssd, AMI built on 20171215
        type: t2.large
        ports:
            - 22
            - 80
            - 443
        ext:
            # external hdd
            size: 20 # GB
            device: /dev/sdh
            type: gp2
    aws-alt:
        ci:
            ec2: false
            s3:
                "{instance}-elife-xpub":
                    encryption: arn:aws:kms:us-east-1:512686554592:key/b6f44e77-46d8-41bb-a2e5-75c0588a2b20 
                "{instance}-elife-xpub-styleguide":
                    public: true
        end2end:
            s3:
                "{instance}-elife-xpub":
                    encryption: arn:aws:kms:us-east-1:512686554592:key/b6f44e77-46d8-41bb-a2e5-75c0588a2b20 
            rds:
                engine: postgres # or 'MySQL'
                version: '10.6'
                type: db.t2.small
                storage: 5 # GB
                storage-type: gp2
                backup-retention: 2 # days
                encryption: arn:aws:kms:us-east-1:512686554592:key/b626157a-1e5b-4bf6-8799-211505efe072 
            ec2:
                cluster-size: 2
                dns-external-primary: true
                dns-internal: true
            ports:
                - 22
                - 80
                - 443
                - 2222:
                    cidr-ip: 10.0.0.0/16 # access via VPC ip range only
                - 8020 # nginx-public-folders via HTTP
                - 8021 # nginx-public-folders via HTTPS
            elb:
                protocol:
                    - 443
        staging:
            s3:
                "{instance}-elife-xpub":
                    encryption: arn:aws:kms:us-east-1:512686554592:key/b6f44e77-46d8-41bb-a2e5-75c0588a2b20 
            rds:
                engine: postgres # or 'MySQL'
                version: '10.6'
                type: db.t2.small
                storage: 5 # GB
                storage-type: gp2
                backup-retention: 2 # days
                encryption: arn:aws:kms:us-east-1:512686554592:key/b626157a-1e5b-4bf6-8799-211505efe072 
            ec2:
                cluster-size: 2
                dns-external-primary: true
                dns-internal: true
            elb:
                protocol:
                    - 443
        prod:
            subdomains:
                - reviewer
                - xpub
            s3:
                "{instance}-elife-xpub":
                    deletion-policy: retain
                    encryption: arn:aws:kms:us-east-1:512686554592:key/b6f44e77-46d8-41bb-a2e5-75c0588a2b20 
            rds:
                multi-az: true
                engine: postgres # or 'MySQL'
                version: '10.6'
                type: db.t2.small
                storage: 5 # GB
                storage-type: gp2
                backup-retention: 28 # days
                encryption: arn:aws:kms:us-east-1:512686554592:key/b626157a-1e5b-4bf6-8799-211505efe072 
                deletion-policy: Snapshot
            ec2:
                cluster-size: 2
                dns-external-primary: true
                dns-internal: true
            elb:
                protocol:
                    - 443
    vagrant:
        box: bento/ubuntu-16.04 # 16.04, deprecated
        ports:
            1201: 80

task-adept:
    description: production data dumps from TaskAdept
    default-branch: null
    domain: null
    intdomain: null
    aws:
        ec2: false
        s3:
            "{instance}-elife-task-adept":

exeter-kriya:
    description: production data dumps from Exeter
    default-branch: null
    domain: null
    intdomain: null
    aws:
        ec2: false
        s3:
            "{instance}-elife-kriya":

fastly-logs:
    description: Fastly CDN access logs
    domain: false
    intdomain: false
    aws:
        ec2: false
        gcs:
            "{instance}-elife-fastly":
                project: elife-fastly
    gcp:
        bigquery:
            "{instance}":
                project: elife-fastly
                tables:
                    api_gateway:
                        schema: ./src/buildercore/bigquery/schemas/fastly-logs-201810.json
                    generic_cdn:
                        schema: ./src/buildercore/bigquery/schemas/fastly-logs-201810.json
                    journal:
                        schema: ./src/buildercore/bigquery/schemas/fastly-logs-201810.json
                    iiif:
                        schema: ./src/buildercore/bigquery/schemas/fastly-logs-201810.json
                    reproducible_document_stack:
                        schema: ./src/buildercore/bigquery/schemas/fastly-logs-201810.json
    aws-alt: {}

data-pipeline:
    description: Data consolidation project
    subdomain: pipeline
    formula-repo: https://github.com/elifesciences/data-pipeline-formula
    aws:
        ec2:
            # Ubuntu 16.04 (non-basebox), deprecated
            ami: ami-1d4e7a66 # xenial, build 20170811, hvm:ebs-ssd
        type: t2.medium
        ports:
            - 22
            - 80 # used only to upgrade to https
            - 443
            - 18443
        s3:
            "{instance}-elife-data-pipeline":
                 deletion-policy: delete
            "{instance}-elife-data-pipeline-archive":
                 deletion-policy: retain
    gcp:
        bigquery:
            "{instance}": # dataset
                # does 'project' belong beneath dataset? do we want an instance affecting multiple projects?
                project: elife-data-pipeline
                tables:
                    # bit of repetition here
                    380_datascience_early_career_researchers:
                        schema: https://raw.githubusercontent.com/elifesciences/data-pipeline-ejp-csv-deposit/master/schemas/380_datascience_early_career_researchers.json
                    455_datascience_editors:
                        schema: https://raw.githubusercontent.com/elifesciences/data-pipeline-ejp-csv-deposit/master/schemas/455_datascience_editors.json
                    489_datascience_editor_keywords:
                        schema: https://raw.githubusercontent.com/elifesciences/data-pipeline-ejp-csv-deposit/master/schemas/489_datascience_editor_keywords.json
                    705_datascience_reviewer_identity_revealed_last_week:
                        schema: https://raw.githubusercontent.com/elifesciences/data-pipeline-ejp-csv-deposit/master/schemas/705_datascience_reviewer_identity_revealed_last_week.json
                    767_datascience_person_roles:
                        schema: https://raw.githubusercontent.com/elifesciences/data-pipeline-ejp-csv-deposit/master/schemas/767_datascience_person_roles.json
                    779_datascience_reviewer_info_all:
                        schema: https://raw.githubusercontent.com/elifesciences/data-pipeline-ejp-csv-deposit/master/schemas/779_datascience_reviewer_info_all.json
                    795_datascience_person_merge_info_all:
                        schema: https://raw.githubusercontent.com/elifesciences/data-pipeline-ejp-csv-deposit/master/schemas/795_datascience_person_merge_info_all.json
                    extract_history:
                        schema: https://raw.githubusercontent.com/elifesciences/data-pipeline-ejp-to-json-converter/develop/schemas/extract_history.bqschema.json
                    manuscript:
                        schema: https://raw.githubusercontent.com/elifesciences/data-pipeline-ejp-to-json-converter/develop/schemas/manuscript.bqschema.json
                    manuscript_full:
                        schema: https://raw.githubusercontent.com/elifesciences/data-pipeline-ejp-to-json-converter/develop/schemas/manuscript_full.bqschema.json
                    manuscript_version:
                        schema: https://raw.githubusercontent.com/elifesciences/data-pipeline-ejp-to-json-converter/develop/schemas/manuscript_version.bqschema.json
                    person:
                        schema: https://raw.githubusercontent.com/elifesciences/data-pipeline-ejp-to-json-converter/develop/schemas/person.bqschema.json
                    person_v2:
                        schema: https://raw.githubusercontent.com/elifesciences/data-pipeline-ejp-to-json-converter/develop/schemas/person_v2.bqschema.json
    aws-alt:
        standalone:
            ext:
                size: 100 # GB
            ports:
                - 22
                - 80 # used only to upgrade to https
                - 443
                - 18443
            s3: false
        staging:
            ext:
                size: 100 # GB
        prod:
            ext:
                size: 100 # GB
    gcp-alt:
        standalone:
            bigquery: false
    vagrant:
        box: bento/ubuntu-16.04 # 16.04, deprecated
        ports:
            1222: 8080 # bypass nginx for development, it's glitchy
            1223: 18080 # nifi-registry service

bastion:
    description: intermediate server that gives access to the inside of the VPC
    subdomain: bastion
    formula-repo: https://github.com/elifesciences/bastion-formula
    aws:
        ec2:
            ami: ami-14a1d06e # GENERATED created from basebox--1604, deprecated
                              # us-east-1, build date 20170811, hvm:ebs-ssd, AMI built on 20171215
        type: t2.nano # 500 MB
        ports:
            - 22
        subdomains:
            - bastion
    vagrant:
        box: bento/ubuntu-16.04 # 16.04, deprecated
        ram: 512

reproducible-document-stack:
    description: Reproducible Document Stack example
    repo: https://github.com/elifesciences/rds-example
    aws: 
        ec2: false
        s3:
            "{instance}-elife-reproducible-document-stack":
                public: true
        fastly:
            backends:
                # first is default
                default:
                    hostname: "{instance}-elife-reproducible-document-stack.s3.amazonaws.com"
            subdomains:
                - "{instance}--cdn-repro"
            default-ttl: 60 # seconds
            # doesn't work and there's no information about why
            # https://community.fastly.com/t/monitoring-health-status-from-fastly-health-checks/516
            #healthcheck:
            #    path: /ping-fastly
            #    check-interval: 10000
            #    timeout: 2000
            errors:
                # always prod for simplicity
                url: https://prod-elife-error-pages.s3.amazonaws.com/
                codes:
                    503: "503.html"
                fallbacks:
                    4xx: "4xx.html"
                    5xx: "5xx.html"
            vcl:
                - "original-host"
                - "ping-status"
            gcslogging:
                bucket: "{instance}-elife-fastly"
                path: "reproducible-document-stack--{instance}/"
                period: 600
            bigquerylogging:
                project: "elife-fastly"
                dataset: "{instance}"
                table: "reproducible_document_stack"
    aws-alt:
        prod:
            fastly:
                subdomains:
                    - "{instance}--cdn-repro"
                    - repro

kubernetes-aws:
    description: project managing an EKS cluster
    domain: False
    intdomain: False
    aws:
        ec2: false
        eks:
            worker:
                type: t2.small    
                max-size: 4
                desired-capacity: 3
            helm: true
            external-dns:
                domain-filter: "elifesciences.org"

large-repo-wrangler:
    description: when elife-publications requires a large git repository to be wrangled. adhoc instances only.
    domain: False
    intdomain: False
    formula-repo: https://github.com/elifesciences/large-repo-wrangler-formula
    aws:
        ext:
            type: gp2
            size: 20 # GB
            device: /dev/sdh
        ports:
            - 22
    vagrant: {}


microsimulation-demo:
    subdomain: ijm  # demo--ijm.elifesciences.org
    repo: https://github.com/microsimulation/demo
    formula-repo: https://github.com/elifesciences/microsimulation-demo-formula
    aws:
        type: t2.medium # 4 GB of RAM, same as search for now.
        ports:
            - 22
            - 80
            - 443
    aws-alt: {}
    vagrant:
        ports:
            1280: 80
            1281: 8081

bioprotocol:
    subdomain: bp # ci--bp.elifesciences.org
    repo: https://github.com/elifesciences/bioprotocol-service
    formula-repo: https://github.com/elifesciences/bioprotocol-formula
    aws:
        # ip: 52.200.243.108 # required by BP to whitelist our interactions with their API
        ports:
            - 22
            - 80
            - 443
        sqs:
            # single queue that receives messages about updates to articles (internally)
            bioprotocol--{instance}:
                subscriptions:
                    - bus-articles--{instance}
    aws-alt: {}
    vagrant:
        ports:
            1280: 80
