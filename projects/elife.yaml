defaults:
    description: defaults for all projects in this file
    salt: '2016.3' # the version of salt these project use
    domain: elifesciences.org
    # addressing within VPC
    intdomain: elife.internal
    # 'lax', 'metrics', 'gateway', etc
    subdomain: null
    # projects with an explicit `repo` attribute support branch deployments with
    # ./bldr deploy
    repo: null
    # repository containing build instructions for this project
    formula-repo: null
    # repo containing project pillar data (credentials typically)
    # only the master-server will have a copy of this and only the master-server
    # will need permissions to clone it
    private-repo: ssh://git@github.com/elifesciences/builder-private
    # default branch to use when creating new instances
    default-branch: master
    # 
    formula-dependencies:
        - https://github.com/elifesciences/builder-base-formula
    aws:
        account_id: 512686554592
        # TODO: this field will become a dictionary of all EC2-related configuration
        ec2:
            # how many EC2 instance per stack instance
            cluster-size: 1
            # find more here: http://cloud-images.ubuntu.com/releases/
            ami: ami-aa15f6c7   # elife 'basebox.2016-05-06'
        region: us-east-1
        vpc-id: vpc-78a2071d  # vpc-id + subnet-id are peculiar to AWS account + region
        subnet-id: subnet-1d4eb46a # elife-public-subnet
        subnet-cidr: '10.0.2.0/24'
        # necessary for multiple-node EC2 and for ELB
        redundant-subnet-id: subnet-7a31dd46 # elife-public-subnet-2
        redundant-subnet-cidr: '10.0.3.0/24'
        type: t2.small  # ~ $20/mo
        rds:
            # rds defaults only used if an `rds` section present in project
            # explicit database name overrides the one generated at template creation
            multi-az: False
            engine: postgres
            # ensure this matches the version of Postgres you install on server!
            version: '9.4'
            type: db.t2.small
            storage: 5 # GB
            backup-retention: 28 # days
            # two subnets are required in two different availability zones
            # http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbsubnet-group.html
            subnets:
                # two are required
                # NOTE! the 'dbsubnet-' prefix is important to *builder*
                # it tells us which subnets we can provision RDS within
                - subnet-8eea67d7 # elife-dbsubnet-1
                - subnet-dbc471f0 # elife-dbsubnet-2

        # TODO: this will be moved inside aws.ec2
        ext:
            # external hdd
            size: 10 # GB
            device: /dev/sdh
        elb:
            # elb defaults only used if an 'elb' section present in project
            stickiness: False
            protocol: http
            idle_timeout: 60
            certificate: arn:aws:iam::512686554592:server-certificate/cloudfront/wildcard.elifesciences.org/wildcard.elifesciences.org
        sqs: []
        sns: []
        s3: []
    aws-alt:
        fresh:
            description: uses a plain Ubuntu basebox instead of an ami
            ec2:
                ami: ami-9eaa1cf6 # Ubuntu 14.04
    vagrant:
        box: ubuntu/trusty64 # Ubuntu 14.04
        # box-url not needed for boxes hosted on Atlas 
        box-url: null 
        ip: 192.168.33.44
        ram: 1024
        cpus: 2
        cpucap: 100 # percent (vagrant default)
 
basebox:
    aws:
        ec2:
            ami: ami-9eaa1cf6 # Ubuntu 14.04 (correct, but older)
        ports:
            - 22    
    vagrant: {}

master-server:
    # formula-repo for the 'master-server' project should contain the 
    # confidential pillar data, master config and state top file.
    # see: https://github.com/elifesciences/builder-private-example
    formula-repo: ssh://git@github.com/elifesciences/master-server-formula
    aws:
        ports:
            - 22
            - 4506: # salt publish port
                # CIDR of subnet this master will server
                cidr-ip: 10.0.0.0/16 # access via VPC ip range only
            - 4505: # salt return port
                cidr-ip: 10.0.0.0/16
    vagrant: {}

lax:
    subdomain: lax # lax.elifesciences.org
    repo: https://github.com/elifesciences/lax.git
    formula-repo: https://github.com/elifesciences/lax-formula
    aws:
        ports:
            - 22
            - 443
            - 80
        sqs:
            bot-lax-{instance}-inc: {}
            bot-lax-{instance}-out: {}
    aws-alt:
        end2end:
            description: RDS backed
            rds:
                storage: 5
        prod:
            description: RDS backed
            rds:
                storage: 5
    vagrant:
        ports:
            1239: 80

api-gateway:
    subdomain: gateway # ll: gateway.elifesciences.org
    formula-repo: https://github.com/elifesciences/api-gateway-formula
    aws:
        ports:
            - 22
            - 80 # TODO: remove in favor of only 443? will require certificates for all environments
            - 443
            # - 8000: # possibly expose this to public. Kong uses this to *proxy* requests
            # - 8001: # don't ever expose to public. Kong uses this for API management
    vagrant:
        ports:
            1323: 80


journal:
    subdomain: journal # journal.elifesciences.org
    intdomain: null
    repo: https://github.com/elifesciences/journal
    formula-repo: https://github.com/elifesciences/journal-formula
    aws:
        ports:
            - 22
            - 443
            - 80
    aws-alt:
        end2end:
            description: end2end environment for journal. ELB on top of multiple EC2 instances
            ec2:
                cluster-size: 2
            elb:
                stickiness: True
                protocol: https
    vagrant:
        ram: 4096
        ports:
            1240: 80

pattern-library:
    subdomain: ui-patterns
    repo: https://github.com/elifesciences/pattern-library
    formula-repo: https://github.com/elifesciences/pattern-library-formula
    aws:
        type: t2.small
        ports:
            - 22
            - 443
    vagrant:
        ram: 2048
        ports:
            1340: 80


elife-metrics:
    subdomain: metrics # metrics.elifesciences.org
    repo: https://github.com/elifesciences/elife-metrics
    formula-repo: https://github.com/elifesciences/elife-metrics-formula
    aws:
        ports:
            - 22
            - 443
            - 80
            - 5432
    aws-alt:
        end2end:
            description: end2end environment for metrics. RDS backed
            rds:
                storage: 5
        prod:
            description: production environment for metrics. RDS backed
            rds:
                storage: 5
        master:
            description: production environment for metrics. RDS backed
            rds:
                storage: 5
    vagrant:
        ports:
            1240: 80


elife-bot:
    repo: https://github.com/elifesciences/elife-bot
    formula-repo: https://github.com/elifesciences/elife-bot-formula
    aws:
        type: t2.medium
        ports:
            - 22
            - 80
        ext:
            size: 30 # GB
    aws-alt:
        #prod:
        #    eip: 54.164.145.166
        large:
            description: intended to run temporarily
            type: c4.4xlarge
            ext:
                size: 160 # GB
                type: ssd
                device: /dev/xvdh
        end2end:
            description: speeding up end2end tests
            type: c4.xlarge
            s3:
                end2end-elife-production-final:
                    sqs-notifications:
                        end2end-incoming-queue: True


    vagrant:
        ports:
            1231: 80


journal-cms:
    subdomain: journal-cms # journal-cms.elifesciences.org
    repo: https://github.com/elifesciences/journal-cms
    formula-repo: https://github.com/elifesciences/journal-cms-formula
    aws:
        type: t2.small # explicitly 2GB RAM
        ports:
            - 22
            - 443
            - 80: 
                cidr-ip: 10.0.2.0/24 # access via VPC ip range only
        sqs:
            # journal-cms--prod, journal-cms--end2end, etc.
            journal-cms--{instance}:
                subscriptions:
                    - bus-articles--{instance}
    vagrant:
        ports:
            1241: 80
        ram: 2048


elife-dashboard:
    subdomain: ppp-dash # ppp-dash.elifesciences.org
    repo: ssh://git@github.com/elifesciences/elife-dashboard
    formula-repo: https://github.com/elifesciences/elife-dashboard-formula
    default-branch: develop
    aws:
        ports:
            - 22
            - 80
            - 443
    aws-alt:
        end2end:
            description: production-like environment. backed by RDS
            rds:
                storage: 5
        prod:
            description: production environment. backed by RDS
            rds:
                storage: 5
    vagrant:
        ports:
            1324: 80
            8080: 8080 # scheduler (blocked on AWS)
        ram: 2048


elife-api:
    subdomain: api # api.elifesciences.org
    repo: https://github.com/elifesciences/elife-api
    formula-repo: https://github.com/elifesciences/elife-api-formula
    aws:
        ports:
            - 22
            - 80
            - 443
    vagrant:
        ports:
            1233: 80


elife-reporting:
    formula-repo: https://github.com/elifesciences/elife-reporting-formula
    vagrant:
        ram: 1024
        ports:
            1333: 80

elife-libraries:
    formula-repo: https://github.com/elifesciences/elife-libraries-formula
    aws:
        type: t2.small # 2GB of RAM
        ports:
            - 22
    aws-alt:
        powerful:
            description: speeding up bot-lax-adaptor tests
            type: c4.2xlarge

    vagrant:
        ram: 2048

elife-alfred:
    subdomain: alfred
    formula-repo: https://github.com/elifesciences/elife-alfred-formula
    aws:
        type: t2.medium
        ports:
            - 22
            - 80
            - 443
            - 10241 # JNLP for jenkins-cli.jar
            - 16022 # Jenkins SSH port
        ext:
            size: 30 # GB
            type: gp2
    vagrant:
        ram: 4096
        ports:
            1433: 80

elife-jira:
    subdomain: jira # jira.elifesciences.org
    formula-repo: https://github.com/elifesciences/elife-jira-formula
    aws:
        ports:
            - 22
            - 8080
    vagrant:
        ram: 3096
        ports:
            1325: 8080

api-dummy:
    subdomain: api-dummy
    repo: https://github.com/elifesciences/api-dummy
    formula-repo: https://github.com/elifesciences/api-dummy-formula
    aws:
        type: t2.micro
        ports:
            - 22
            - 443
            - 80
    vagrant:
        ports:
            1242: 80

elife-website:
    subdomain: v2
    repo: https://github.com/elifesciences/elife-website
    formula-repo: https://github.com/elifesciences/elife-website-formula
    aws:
        ports:
            - 22
            - 80
            - 443
    aws-alt:
        large:
            description: intended to run temporarily
            type: m4.2xlarge
    vagrant:
        ram: 3072
        ports:
            1238: 80
            1326: 8983 # Solr web gui
            3307: 3306 # mysql
            6379: 6379 # redis

anonymous:
    description: a server without any eLife credentials; if you log in here, you will be using the anonymous separate AWS account
    formula-repo: https://github.com/elifesciences/anonymous-formula
    aws:
        type: t2.micro
        ports:
            - 22
    vagrant:
        ram: 1024

# used by "Maloney, Christopher (NIH/NLM/NCBI) [C]" <maloneyc@ncbi.nlm.nih.gov>
jats4r:
    aws:
        ec2:
            ami: ami-c60b90d1 # us-east-1 xenial 16.04 LTS amd64 hvm:ebs-ssd 20160815 hvm  
        type: t2.micro
        ports:
            - 22
            - 80
            - 443

medium:
    description: microservice that gives access to eLife posts on Medium.com
    domain: False
    subdomain: medium
    repo: https://github.com/elifesciences/medium
    formula-repo: https://github.com/elifesciences/medium-formula
    vagrant:
        ram: 1024
        ports:
            1243: 80
    aws:
        type: t2.micro
        ports:
            - 22
            - 80
    aws-alt:
        clustered:
            ec2:
                cluster-size: 2
            elb: 
                protocol: http

bus:
    description: see https://github.com/elifesciences/bus
    default-branch: null
    domain: null
    intdomain: null
    aws:
        ec2: false
        sns:
            # bus-articles--prod, bus-articles--end2end, etc.
            - bus-articles--{instance}
            - bus-podcast-episodes--{instance}
            - bus-subjects--{instance}
            - bus-people--{instance}
            - bus-collections--{instance}
            - bus-events--{instance}
            - bus-interviews--{instance}
            - bus-blog-articles--{instance}
            - bus-annual-reports--{instance}

search:
    domain: False
    subdomain: search
    repo: https://github.com/elifesciences/search
    formula-repo: https://github.com/elifesciences/search-formula
    vagrant:
        ram: 4096
        ports:
            1244: 80
    aws:
        type: t2.small # 2 GB of RAM: once we know more about which software
                       # will be installed, we can choose the right machine
        ports:
            - 22
            - 80
        sqs:
            # search--prod, search--end2end, etc.
            search--{instance}:
                subscriptions:
                    - bus-articles--{instance}
                    - bus-podcast-episodes--{instance}
                    - bus-subjects--{instance}
                    - bus-collections--{instance}
                    - bus-events--{instance}
                    - bus-interviews--{instance}
                    - bus-blog-articles--{instance}

jats4r-validator:
    #domain: jats4r.org
    subdomain: validator # validator.jats4r.org
    repo: https://github.com/jats4r/validator
    formula-repo: https://github.com/elifesciences/jats4r-validator-formula
    aws:
        ports:
            - 22
            - 80
    vagrant:
        ports:
            1239: 80
            
statusbase:
    subdomain: statusbase
    repo: https://github.com/ep320/statusbase
    formula-repo: https://github.com/elifesciences/statusbase-formula
    aws:
        ports:
            - 22
            - 80
    vagrant:
        ports:
            1246: 80

observer:
    subdomain: observer # observer.elifesciences.org
    formula-repo: https://github.com/elifesciences/observer-formula
    aws:
        type: t2.medium
        ports:
            - 22
            - 80
            - 443
    vagrant:
        ram: 2048 # metabase, mostly
        ports:
            1239: 80
