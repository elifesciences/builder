defaults:
    description: defaults for all projects in this file
    salt: '2016.3.6' # the version of salt these project use
    # use false with a subdomain to assign internal addresses only
    domain: elifesciences.org
    # addressing within VPC
    intdomain: elife.internal
    # 'lax', 'metrics', 'gateway', etc
    subdomain: null
    # projects with an explicit `repo` attribute support branch deployments with
    # ./bldr deploy
    repo: null
    # repository containing build instructions for this project
    formula-repo: null
    # repo containing project pillar data (credentials typically)
    # only the master-server will have a copy of this and only the master-server
    # will need permissions to clone it
    private-repo: ssh://git@github.com/elifesciences/builder-private
    # default branch to use when creating new instances
    default-branch: master
    # in rare cases we have formulas requiring the states of other formulas
    formula-dependencies:
        - https://github.com/elifesciences/builder-base-formula
    aws:
        account_id: 512686554592
        # TODO: this field will become a dictionary of all EC2-related configuration
        ec2:
            # how many EC2 instance per stack instance
            cluster-size: 1
            # find more here: http://cloud-images.ubuntu.com/releases/
            # ami: ami-1d4e7a66 # xenial, us-east-1, build date 20170811, hvm:ebs-ssd
            ami: ami-92002785   # elife 'basebox.2016-11-03'
            # use a master server or go ronin?
            masterless: false
        region: us-east-1
        vpc-id: vpc-78a2071d  # vpc-id + subnet-id are peculiar to AWS account + region
        subnet-id: subnet-1d4eb46a # elife-public-subnet, us-east-1d
        subnet-cidr: '10.0.2.0/24'
        ## additional value in case of capacity problems: elife-public-subnet-3, us-east-1a
        # subnet-id: subnet-2116727b
        # subnet-cidr: '10.0.10.0/24'
        # necessary for multiple-node EC2 and for ELB
        redundant-subnet-id: subnet-7a31dd46 # elife-public-subnet-2, us-east-1e
        redundant-subnet-cidr: '10.0.3.0/24'
        type: t2.small  # ~ $20/mo
        rds:
            # rds defaults only used if an `rds` section present in project
            # explicit database name overrides the one generated at template creation
            multi-az: false
            engine: postgres # or 'MySQL'
            # ensure this matches the version of Postgres you install on server!
            version: '9.4'
            type: db.t2.small
            storage: 5 # GB
            backup-retention: 28 # days
            # if rds.params are specified, a custom db parameter group is created
            params: []
            # two subnets are required in two different availability zones
            # http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbsubnet-group.html
            subnets:
                # two are required
                # NOTE! the 'dbsubnet-' prefix is important to *builder*
                # it tells us which subnets we can provision RDS within
                - subnet-8eea67d7 # elife-dbsubnet-1
                - subnet-dbc471f0 # elife-dbsubnet-2

        # TODO: this will be moved inside aws.ec2
        ext:
            # external hdd
            size: 10 # GB
            device: /dev/sdh
        elb:
            # elb defaults only used if an 'elb' section present in project
            stickiness: false
            protocol: http
            idle_timeout: 60
            certificate: arn:aws:iam::512686554592:server-certificate/cloudfront/wildcard.elifesciences.org/wildcard.elifesciences.org
            healthcheck:
                protocol: http
                port: 80
                path: /ping
                timeout: 4 
                interval: 5
                unhealthy_threshold: 2
                healthy_threshold: 2
        sqs: []
        sns: []
        # e.g.
        # s3:
        #    bucket-name-{instance}:
        #       sqs-notifications: # not implemented
        #           queue-name:
        #               prefix: 'elife-'
        #               suffix: '.xml'
        #       deletion-policy: delete|retain
        s3: {}
        cloudfront: 
            # cloudfront defaults only used if a 'cloudfront' section present in project
            subdomains-without-dns: []
            domains: []
            origins: {}
            certificate_id: ASCAIRXYIRFBOR5QSDP5M
            cookies: []
            compress: true
            headers: []
            errors: null
            default-ttl: 0 # seconds
        subdomains: []
        elasticache:
            # elasticache defaults only used if an `rds` section present in project
            type: cache.t2.small # 1.55 GB of memory, ~$25/mo
            engine: redis
            az: us-east-1d # alternative: us-east-1e to match EC2 instances
            subnets:
                - subnet-20275c68 # elife-cache-subnet-1
                - subnet-c4033af8 # elife-cache-subnet-2
            version: "2.8.24" # closest to builder-base-formula redis.sls
            configuration:
                maxmemory-policy: volatile-ttl

    aws-alt:
        fresh:
            description: uses a plain Ubuntu basebox instead of an ami
            ec2:
                ami: ami-9eaa1cf6 # Ubuntu 14.04
    vagrant:
        # why 'bento'? https://bugs.launchpad.net/cloud-images/+bug/1569237
        # box: bento/ubuntu-16.04 # Ubuntu 16.04 "Xenial"
        box: ubuntu/trusty64 # Ubuntu 14.04
        # box-url not needed for boxes hosted on Atlas
        box-url: null
        ip: 192.168.33.44
        ram: 1024
        cpus: 2
        cpucap: 100 # percent (vagrant default)

basebox:
    aws:
        ec2:
            ami: ami-9eaa1cf6 # Ubuntu 14.04 (correct, but older)
        ports:
            - 22
    vagrant: {}

master-server:
    # formula-repo for the 'master-server' project should contain the
    # confidential pillar data, master config and state top file.
    # see: https://github.com/elifesciences/builder-private-example
    formula-repo: https://github.com/elifesciences/master-server-formula
    aws:
        ports:
            - 22
            - 4506: # salt publish port
                # CIDR of subnet this master will server
                cidr-ip: 10.0.0.0/16 # access via VPC ip range only
            - 4505: # salt return port
                cidr-ip: 10.0.0.0/16
    vagrant: {}

lax:
    subdomain: lax # lax.elifesciences.org
    repo: https://github.com/elifesciences/lax.git
    formula-repo: https://github.com/elifesciences/lax-formula
    aws:
        ports:
            - 22
            - 443
            - 80:
                cidr-ip: 10.0.2.0/24 # internal access only
            - 8001 # bot-lax api
        sqs:
            bot-lax-{instance}-inc: {}
            bot-lax-{instance}-out: {}
    aws-alt:
        end2end:
            description: RDS backed
            rds:
                storage: 5
            ext:
                size: 10 # GB
        prod:
            description: RDS backed
            rds:
                storage: 5
                multi-az: true
            ext:
                size: 10 # GB
    vagrant:
        box: bento/ubuntu-16.04
        ports:
            1239: 80
            1240: 8001

api-gateway:
    subdomain: gateway # ll: gateway.elifesciences.org
    formula-repo: https://github.com/elifesciences/api-gateway-formula
    aws:
        ports:
            - 22
            # only internal traffic has access to port 80 and http
            - 80:
                cidr-ip: 10.0.0.0/16
            # the world must use https
            - 443
            # - 8000: # don't expose this to public. Kong uses this to proxy requests
            # - 8001: # don't ever expose to public. Kong uses this for API admin

    aws-alt:
        end2end:
            cloudfront:
                subdomains: 
                    - "{instance}--cdn-gateway"
                headers:
                    - Accept
        continuumtest:
            cloudfront:
                subdomains: 
                    - "{instance}--cdn-gateway"
                headers:
                    - Accept
        prod:
            cloudfront:
                subdomains: 
                    - "{instance}--cdn-gateway"
                    - api
                headers:
                    - Accept
    vagrant:
        box: bento/ubuntu-16.04
        ports:
            1323: 80

journal:
    subdomain: journal # journal.elifesciences.org
    intdomain: null
    repo: https://github.com/elifesciences/journal
    formula-repo: https://github.com/elifesciences/journal-formula
    formula-dependencies:
        - https://github.com/elifesciences/builder-base-formula
        - https://github.com/elifesciences/api-dummy-formula
    aws:
        ports:
            - 22
            - 443
            - 80:
                cidr-ip: 10.0.0.0/16 # access via VPC ip range only
    aws-alt:
        ci:
            type: t2.medium
        end2end:
            description: end2end environment for journal. ELB on top of multiple EC2 instances
            ec2:
                cluster-size: 2
            elasticache:
                engine: redis
            elb:
                stickiness:
                    type: cookie
                    cookie-name: journal
                protocol:
                    - https
                    - http
            cloudfront:
                subdomains:
                    - "{instance}--cdn-journal"
                headers:
                    - X-Requested-With
                    - Host
                cookies:
                    - journal
                    - AWSELB
                errors: 
                    domain: end2end-elife-error-pages.s3-website-us-east-1.amazonaws.com
                    pattern: "???.html"
                    codes:
                        # ELB with no active instances
                        503: "/5xx.html"
                    protocol: http
        continuumtest:
            elasticache:
                engine: redis
            cloudfront:
                subdomains:
                    - "{instance}--cdn-journal"
                headers:
                    - X-Requested-With
                    - Host
                cookies:
                    - journal
                errors: 
                    domain: continuumtest-elife-error-pages.s3-website-us-east-1.amazonaws.com
                    pattern: "???.html"
                    codes:
                        503: "/5xx.html"
                    protocol: http
        prod:
            description: prod environment for journal. ELB on top of multiple EC2 instances
            ec2:
                cluster-size: 3
            elasticache:
                engine: redis
            elb:
                stickiness:
                    type: cookie
                    cookie-name: journal
                protocol:
                    - https
                    - http
            cloudfront:
                subdomains:
                    - "{instance}--cdn-journal"
                    - www
                    - elife
                    - prod
                    - ""
                    # to overwrite a previously used DNS entry
                    - dummydoesnotexistsplaceholder
                    - dummydoesnotexistsplaceholder2
                headers:
                    - X-Requested-With
                    - Host
                cookies:
                    - journal
                    - AWSELB
                errors: 
                    domain: prod-elife-error-pages.s3-website-us-east-1.amazonaws.com
                    pattern: "???.html"
                    codes:
                        # ELB with no active instances
                        503: "/5xx.html"
                    protocol: http
        cachetest:
            elasticache:
                engine: redis
    vagrant:
        box: bento/ubuntu-16.04
        ram: 4096
        ports:
            1240: 80

pattern-library:
    subdomain: ui-patterns
    repo: https://github.com/elifesciences/pattern-library
    formula-repo: https://github.com/elifesciences/pattern-library-formula
    aws:
        type: t2.small
        ports:
            - 22
            - 80
            - 443
    aws-alt:
        ci:
            s3:
                "{instance}-pattern-library":
                    public: true
        prod:
            subdomains:
                - ui-patterns
    vagrant:
        ram: 2048
        ports:
            1340: 80

evanthia-prototype:
    subdomain: evanthia-prototype
    repo: https://github.com/code56/node_web_server
    formula-repo: https://github.com/code56/node-web-server-formula
    aws:
        type: t2.small
        ports:
            - 22
    vagrant:
        ram: 2048
        ports:
            1340: 80


elife-metrics:
    subdomain: metrics # metrics.elifesciences.org
    repo: https://github.com/elifesciences/elife-metrics
    formula-repo: https://github.com/elifesciences/elife-metrics-formula
    aws:
        ports:
            - 22
            - 443
            - 80
            - 5432
    aws-alt:
        end2end:
            description: end2end environment for metrics. RDS backed
            rds:
                storage: 5
        prod:
            description: production environment for metrics. RDS backed
            rds:
                multi-az: true
                storage: 10
    vagrant:
        ports:
            1240: 80


elife-bot:
    repo: https://github.com/elifesciences/elife-bot
    formula-repo: https://github.com/elifesciences/elife-bot-formula
    domain: false
    subdomain: bot
    aws:
        type: t2.medium
        ports:
            - 22
            # TODO: close this port to outside the VPC
            - 80
        ext:
            size: 30 # GB
        s3:
            "{instance}-elife-silent-corrections":
            "{instance}-elife-published":
                deletion-policy: retain
                public: true
                cors: true
    aws-alt:
        #prod:
        #    eip: 54.164.145.166
        large:
            description: intended to run temporarily
            type: c4.4xlarge
            ext:
                size: 160 # GB
                type: ssd
                device: /dev/xvdh
        end2end:
            description: speeding up end2end tests
            type: c4.4xlarge
            #    end2end-elife-production-final:
            #        sqs-notifications:
            #            end2end-incoming-queue: {}
            #               #prefix: null
            #               #suffix: null
    vagrant:
        box: bento/ubuntu-16.04
        ram: 2048
        ports:
            # loris
            1231: 80
            # digilib
            1232: 8080

generic-cdn:
    description: generic CDN for content like PDF, images
    default-branch: null
    intdomain: null
    aws:
        ec2: false
        cloudfront:
            subdomains:
                - "{instance}-cdn"
            origins:
                # first is default
                default:
                    hostname: elife-cdn.s3.amazonaws.com
                articles:
                    hostname: "{instance}-elife-published.s3.amazonaws.com"
                    pattern: articles/*
            default-ttl: 86400 # seconds
            headers:
                - Origin

journal-cms:
    subdomain: journal-cms # journal-cms.elifesciences.org
    repo: https://github.com/elifesciences/journal-cms
    formula-repo: https://github.com/elifesciences/journal-cms-formula
    formula-dependencies:
        - https://github.com/elifesciences/builder-base-formula
        - https://github.com/elifesciences/api-dummy-formula
    aws:
        type: t2.small # explicitly 2GB RAM
        ports:
            - 22
            - 443
            - 80:
                cidr-ip: 10.0.2.0/24 # access via VPC ip range only
        sqs:
            # journal-cms--prod, journal-cms--end2end, etc.
            journal-cms--{instance}:
                subscriptions:
                    - bus-articles--{instance}
                    - bus-metrics--{instance}
    aws-alt:
        restore-test:
            ext:
                size: 30 # GB
        end2end:
            description: production-like environment. backed by RDS
            rds:
                type: db.t2.medium
                engine: MySQL
                version: '5.7'
                storage: 12 # GB
            ext:
                size: 30 # GB
        continuumtest:
            description: production-like environment.
            rds:
                type: db.t2.small
                engine: MySQL
                version: '5.7'
                storage: 12 # GB
            ext:
                size: 30 # GB
        prod:
            description: production environment. backed by RDS
            rds:
                type: db.t2.medium
                engine: MySQL
                version: '5.7'
                multi-az: true
                storage: 12 # GB
            ext:
                size: 30 # GB
    vagrant:
        ports:
            1241: 80
        ram: 2048


elife-dashboard:
    subdomain: ppp-dash # ppp-dash.elifesciences.org
    repo: https://github.com/elifesciences/elife-dashboard
    formula-repo: https://github.com/elifesciences/elife-dashboard-formula
    default-branch: develop
    aws:
        ports:
            - 22
            - 80
            - 443
    aws-alt:
        end2end:
            description: production-like environment. backed by RDS
            rds:
                storage: 5
        prod:
            description: production environment. backed by RDS
            rds:
                storage: 5
                multi-az: true
    vagrant:
        ports:
            1324: 80
            8080: 8080 # scheduler (blocked on AWS)
        ram: 2048


elife-api:
    subdomain: api # api.elifesciences.org
    repo: https://github.com/elifesciences/elife-api
    formula-repo: https://github.com/elifesciences/elife-api-formula
    aws:
        ports:
            - 22
            - 80
            - 443
    vagrant:
        ports:
            1233: 80


elife-reporting:
    formula-repo: https://github.com/elifesciences/elife-reporting-formula
    vagrant:
        ram: 1024
        ports:
            1333: 80

elife-libraries:
    domain: false
    subdomain: libraries
    formula-repo: https://github.com/elifesciences/elife-libraries-formula
    aws:
        type: t2.small # 2GB of RAM
        ports:
            - 22
        ext:
            size: 30 # GB
            type: gp2
    aws-alt:
        load:
            description: running load tests
            type: t2.2xlarge
        powerful:
            description: speeding up bot-lax-adaptor tests
            type: c4.2xlarge

    vagrant:
        ram: 1024

elife-alfred:
    subdomain: alfred
    formula-repo: https://github.com/elifesciences/elife-alfred-formula
    aws:
        type: t2.large
        ports:
            - 22
            - 80
            - 443
            - 10241 # JNLP for jenkins-cli.jar
            - 16022 # Jenkins SSH port
        ext:
            size: 100 # GB
            type: gp2
    vagrant:
        ram: 4096
        ports:
            1433: 80

api-dummy:
    subdomain: api-dummy
    repo: https://github.com/elifesciences/api-dummy
    formula-repo: https://github.com/elifesciences/api-dummy-formula
    aws:
        type: t2.micro
        ports:
            - 22
            - 443
            - 80
    vagrant:
        ports:
            1242: 80

elife-website:
    subdomain: v2
    repo: https://github.com/elifesciences/elife-website
    formula-repo: https://github.com/elifesciences/elife-website-formula
    aws:
        ports:
            - 22
            - 80
            - 443
    aws-alt:
        large:
            description: intended to run temporarily
            type: m4.2xlarge
    vagrant:
        ram: 3072
        ports:
            1238: 80
            1326: 8983 # Solr web gui
            3307: 3306 # mysql
            6379: 6379 # redis

anonymous:
    description: a server without any eLife credentials; if you log in here, you will be using the anonymous separate AWS account
    formula-repo: https://github.com/elifesciences/anonymous-formula
    aws:
        type: t2.micro
        ports:
            - 22
    vagrant:
        ram: 1024

# used by "Maloney, Christopher (NIH/NLM/NCBI) [C]" <maloneyc@ncbi.nlm.nih.gov>
# this is a free form instance jats4r can do what they like with
jats4r:
    aws:
        ec2:
            ami: ami-c60b90d1 # us-east-1 xenial 16.04 LTS amd64 hvm:ebs-ssd 20160815 hvm
        type: t2.micro
        ports:
            - 22
            - 80
            - 443

# distinct from the 'jats4r' project, this runs an instance of the validator only
jats4r-validator:
    #domain: jats4r.org
    subdomain: validator # validator.jats4r.org
    repo: https://github.com/jats4r/validator
    formula-repo: https://github.com/elifesciences/jats4r-validator-formula
    aws:
        ports:
            - 22
            - 80
    vagrant:
        ports:
            1239: 80

medium:
    description: microservice that gives access to eLife posts on Medium.com
    domain: false
    subdomain: medium
    repo: https://github.com/elifesciences/medium
    formula-repo: https://github.com/elifesciences/medium-formula
    vagrant:
        ram: 1024
        ports:
            1243: 80
    aws:
        type: t2.micro
        ports:
            - 22
            - 80:
                cidr-ip: 10.0.2.0/24 # internal access only
    aws-alt:
        clustered:
            ec2:
                cluster-size: 2
            elb:
                protocol: http

bus:
    description: see https://github.com/elifesciences/bus
    default-branch: null
    domain: null
    intdomain: null
    aws:
        ec2: false
        sns:
            # bus-articles--prod, bus-articles--end2end, etc.
            - bus-articles--{instance}
            - bus-podcast-episodes--{instance}
            - bus-subjects--{instance}
            - bus-people--{instance}
            - bus-collections--{instance}
            - bus-events--{instance}
            - bus-interviews--{instance}
            - bus-blog-articles--{instance}
            - bus-annual-reports--{instance}
            - bus-covers--{instance}
            - bus-labs-posts--{instance}
            - bus-press-packages--{instance}
            - bus-metrics--{instance}

search:
    domain: false
    subdomain: search
    repo: https://github.com/elifesciences/search
    formula-repo: https://github.com/elifesciences/search-formula
    formula-dependencies:
        - https://github.com/elifesciences/builder-base-formula
        - https://github.com/elifesciences/api-dummy-formula
    vagrant:
        ram: 2048
        ports:
            1244: 80
            1245: 8080
            9920: 9200
    aws:
        type: t2.medium # 4 GB of RAM: once we know more about which software
                        # will be installed, we can choose the right machine
        ports:
            - 22
            - 80:
                cidr-ip: 10.0.2.0/24 # internal access only
        sqs:
            # search--prod, search--end2end, etc.
            search--{instance}:
                subscriptions:
                    - bus-articles--{instance}
                    - bus-podcast-episodes--{instance}
                    - bus-subjects--{instance}
                    - bus-collections--{instance}
                    - bus-interviews--{instance}
                    - bus-blog-articles--{instance}
                    - bus-labs-posts--{instance}

recommendations:
    domain: false
    subdomain: recommendations
    repo: https://github.com/elifesciences/recommendations
    formula-repo: https://github.com/elifesciences/recommendations-formula
    formula-dependencies:
        - https://github.com/elifesciences/builder-base-formula
        - https://github.com/elifesciences/api-dummy-formula
    vagrant:
        ram: 2048
        ports:
            1254: 80
            1255: 8080
    aws:
        type: t2.medium # 4 GB of RAM: same as search for now.
        ports:
            - 22
            - 80:
                cidr-ip: 10.0.0.0/16 # internal access only
        sqs:
            recommendations--{instance}:
                subscriptions:
                    - bus-articles--{instance}
                    - bus-podcast-episodes--{instance}
                    - bus-subjects--{instance}
                    - bus-collections--{instance}

personalised-covers:
    domain: false
    subdomain: personalised-covers
    repo: https://github.com/elifesciences/personalised-covers
    formula-repo: https://github.com/elifesciences/personalised-covers-formula
    formula-dependencies:
        - https://github.com/elifesciences/builder-base-formula
        - https://github.com/elifesciences/api-dummy-formula
    vagrant:
        ram: 1024
        ports:
            1246: 80
            1247: 8080
    aws:
        type: t2.micro # 1 GB of RAM: Unsure memory stats for PDF generation.
        ports:
            - 22
            - 80:
                cidr-ip: 10.0.0.0/16 # internal access only
        s3:
            "{instance}-elife-personalised-covers":
                deletion-policy: retain

statusbase:
    subdomain: statusbase
    repo: https://github.com/ep320/statusbase
    formula-repo: https://github.com/elifesciences/statusbase-formula
    aws:
        ports:
            - 22
            - 80
    vagrant:
        ports:
            1246: 80

observer:
    subdomain: observer # observer.elifesciences.org
    repo: https://github.com/elifesciences/observer
    formula-repo: https://github.com/elifesciences/observer-formula
    aws:
        ec2:
            ami: ami-1d4e7a66 # xenial, build 20170811, hvm:ebs-ssd
        type: t2.medium
        ports:
            - 22
            - 80
            - 8001
            - 443
        sqs:
            observer--{instance}:
                subscriptions:
                    - bus-articles--{instance}
                    - bus-metrics--{instance}
    aws-alt:
        standalone:
            description: doesn't speak to the master server. RDS backed
            ec2:
                masterless: true
            rds:
                storage: 10
        end2end:
            description: production-like environment. RDS backed
            rds:
                storage: 10
        prod:
            description: production environment. RDS backed
            rds:
                storage: 10
                multi-az: true

    vagrant:
        box: bento/ubuntu-16.04
        ram: 2048 # metabase, mostly
        ports:
            1239: 80
            1240: 8001

error-pages:
    description: static deployment of https://github.com/elifesciences/error-pages
    default-branch: null
    domain: null
    intdomain: null
    aws:
        ec2: false
        s3:
            "{instance}-elife-error-pages":
                website-configuration:
                    index-document: index.html
                cors: true

figure-viewer:
    description: static deployment of https://github.com/elifesciences/figure-viewer
    default-branch: null
    domain: null
    intdomain: null
    aws:
        ec2: false
        s3:
            "{instance}-elife-figure-viewer":
                website-configuration:
                    index-document: index.html

reviewer-suggestions:
    description: data science project (DEPRECATED)
    subdomain: reviewer-suggestions
    repo: https://github.com/elifesciences/reviewer-suggestions
    formula-repo: https://github.com/elifesciences/reviewer-suggestions-formula
    aws:
        type: t2.xlarge # explicitly 16GB RAM for heavy background processing
        ports:
            - 22
            - 80
            - 443
        rds:
            storage: 5
        ext:
            # external hdd
            size: 100 # GB
            device: /dev/sdf
    aws-alt:
        prod:
            rds:
                multi-az: true
    vagrant:
        ports:
            1241: 80
        ram: 4096

peerscout:
    description: PeerScout
    subdomain: peerscout
    repo: https://github.com/elifesciences/peerscout
    formula-repo: https://github.com/elifesciences/peerscout-formula
    aws:
        type: t2.xlarge # explicitly 16GB RAM for heavy background processing
        ports:
            - 22
            - 80
            - 443
        rds:
            storage: 5
        ext:
            # external hdd
            size: 100 # GB
            device: /dev/sdf
    aws-alt:
        prod:
            rds:
                multi-az: true
    vagrant:
        ports:
            1241: 80
        ram: 4096

iiif:
    description: IIIF, image server for resizing/tiling/zooming
    subdomain: iiif
    intdomain: null
    repo: https://github.com/elifesciences/loris
    formula-repo: https://github.com/elifesciences/iiif-formula
    aws:
        type: t2.medium
        ports:
            - 22
            - 80
            - 443
    aws-alt:
        # for testing new versions
        ci:
            ports:
                - 22
                - 80:
                    cidr-ip: 10.0.0.0/16 # ELB only
            ec2:
                cluster-size: 2
            ext:
                size: 30 # GB
            elb:
                protocol: 
                    - https
                healthcheck:
                    path: /
        end2end:
            ports:
                - 22
                - 80:
                    cidr-ip: 10.0.0.0/16 # ELB only
            ec2:
                cluster-size: 2
            ext:
                size: 30 # GB
            elb:
                protocol: 
                    - https
                healthcheck:
                    path: /
            cloudfront:
                subdomains: 
                    - "{instance}--cdn-iiif"
                headers:
                    - Host
        # manual tests
        continuumtest:
            ports:
                - 22
                - 80:
                    cidr-ip: 10.0.0.0/16 # ELB only
            ec2:
                cluster-size: 2
            elb:
                protocol: 
                    - https
                healthcheck:
                    path: /
            cloudfront:
                subdomains: 
                    - "{instance}--cdn-iiif"
                headers:
                    - Host
        prod:
            ports:
                - 22
                - 80:
                    cidr-ip: 10.0.0.0/16 # ELB only
            ec2:
                cluster-size: 2
            ext:
                size: 30 # GB
            elb:
                protocol: 
                    - https
                healthcheck:
                    path: /
            cloudfront:
                subdomains: 
                    - "{instance}--cdn-iiif"
                    - iiif
                headers:
                    - Host
    vagrant:
        ports:
            1261: 80

redirects:
    description: redirect various domains to the canonical elifesciences.org
    subdomain: redirects
    intdomain: null
    formula-repo: https://github.com/elifesciences/redirects-formula
    aws:
        type: t2.nano
        ports:
            - 22
            - 80
            - 443
    aws-alt:
        prod:
            cloudfront:
                certificate_id: ASCAI7S7LHYV6LTSUGBNM
                subdomains:
                    - elifesciences.net
                    - e-lifesciences.org
                    - e-lifesciences.net
                    - elifejournal.net
                    - e-lifejournal.org
                    - e-lifejournal.com
                    - e-lifejournal.net
                    - elifejournal.org
                headers:
                    - Host

    vagrant:
        ports:
            1262: 80

profiles:
    subdomain: profiles
    repo: https://github.com/elifesciences/profiles
    formula-repo: https://github.com/elifesciences/profiles-formula
    vagrant:
        ram: 1024
        ports:
            1265: 80
    aws:
        ports:
            - 22
            - 80
            - 443

evanthia-simpler-component:
    subdomain: evanthia-simpler-component
    repo: https://github.com/code56/nodeServerSimplerFig
    formula-repo: https://github.com/code56/simpler-component-formula
    aws:
        type: t2.small
        ports:
            - 22
    vagrant:
        ram: 2048
        ports:
            1340: 80

crm:
    subdomain: crm # crm.elifesciences.org
    repo: https://github.com/elifesciences/drupal-civi
    formula-repo: ssh://git@github.com/elifesciences/crm-formula
    aws:
        type: t2.medium
        ports:
            22: 22
            80: 80
            443: 443
    aws-alt:
        ci:
            rds:
                engine: MySQL
                version: '5.5'
                storage: 30 # GB
                type: db.t2.medium
                params:
                    log_bin_trust_function_creators: 1
        end2end:
            rds:
                engine: MySQL
                version: '5.5'
                storage: 30 # GB
                type: db.t2.medium
                params:
                    log_bin_trust_function_creators: 1
        prod:
            rds:
                engine: MySQL
                version: '5.5'
                storage: 30 # GB
                type: db.t2.medium
                params:
                    log_bin_trust_function_creators: 1

    vagrant:
        ram: 2048
        ports:
            1237: 80

elife-xpub:
    subdomain: xpub
    repo: https://github.com/elifesciences/elife-xpub
    formula-repo: git@github.com:elifesciences/elife-xpub-formula
    aws:
        ec2: 
            ami: ami-1d4e7a66 # xenial, build 20170811, hvm:ebs-ssd
        type: t2.small
        ports:
            - 22
            - 443
            - 80
    vagrant:
        box: bento/ubuntu-16.04
        ram: 2048
        ports:
            1201: 80


